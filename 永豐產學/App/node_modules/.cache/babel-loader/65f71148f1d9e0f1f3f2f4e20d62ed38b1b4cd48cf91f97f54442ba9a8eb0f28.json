{"ast":null,"code":"// 'mime-score' back-ported to CommonJS\n\n// Score RFC facets (see https://tools.ietf.org/html/rfc6838#section-3)\nvar FACET_SCORES = {\n  'prs.': 100,\n  'x-': 200,\n  'x.': 300,\n  'vnd.': 400,\n  default: 900\n};\n\n// Score mime source (Logic originally from `jshttp/mime-types` module)\nvar SOURCE_SCORES = {\n  nginx: 10,\n  apache: 20,\n  iana: 40,\n  default: 30 // definitions added by `jshttp/mime-db` project?\n};\nvar TYPE_SCORES = {\n  // prefer application/xml over text/xml\n  // prefer application/rtf over text/rtf\n  application: 1,\n  // prefer font/woff over application/font-woff\n  font: 2,\n  default: 0\n};\n\n/**\n * Get each component of the score for a mime type.  The sum of these is the\n * total score.  The higher the score, the more \"official\" the type.\n */\nmodule.exports = function mimeScore(mimeType, source = 'default') {\n  if (mimeType === 'application/octet-stream') {\n    return 0;\n  }\n  const [type, subtype] = mimeType.split('/');\n  const facet = subtype.replace(/(\\.|x-).*/, '$1');\n  const facetScore = FACET_SCORES[facet] || FACET_SCORES.default;\n  const sourceScore = SOURCE_SCORES[source] || SOURCE_SCORES.default;\n  const typeScore = TYPE_SCORES[type] || TYPE_SCORES.default;\n\n  // All else being equal prefer shorter types\n  const lengthScore = 1 - mimeType.length / 100;\n  return facetScore + sourceScore + typeScore + lengthScore;\n};","map":{"version":3,"names":["FACET_SCORES","default","SOURCE_SCORES","nginx","apache","iana","TYPE_SCORES","application","font","module","exports","mimeScore","mimeType","source","type","subtype","split","facet","replace","facetScore","sourceScore","typeScore","lengthScore","length"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/node_modules/express/node_modules/mime-types/mimeScore.js"],"sourcesContent":["// 'mime-score' back-ported to CommonJS\n\n// Score RFC facets (see https://tools.ietf.org/html/rfc6838#section-3)\nvar FACET_SCORES = {\n  'prs.': 100,\n  'x-': 200,\n  'x.': 300,\n  'vnd.': 400,\n  default: 900\n}\n\n// Score mime source (Logic originally from `jshttp/mime-types` module)\nvar SOURCE_SCORES = {\n  nginx: 10,\n  apache: 20,\n  iana: 40,\n  default: 30 // definitions added by `jshttp/mime-db` project?\n}\n\nvar TYPE_SCORES = {\n  // prefer application/xml over text/xml\n  // prefer application/rtf over text/rtf\n  application: 1,\n\n  // prefer font/woff over application/font-woff\n  font: 2,\n\n  default: 0\n}\n\n/**\n * Get each component of the score for a mime type.  The sum of these is the\n * total score.  The higher the score, the more \"official\" the type.\n */\nmodule.exports = function mimeScore (mimeType, source = 'default') {\n  if (mimeType === 'application/octet-stream') {\n    return 0\n  }\n\n  const [type, subtype] = mimeType.split('/')\n\n  const facet = subtype.replace(/(\\.|x-).*/, '$1')\n\n  const facetScore = FACET_SCORES[facet] || FACET_SCORES.default\n  const sourceScore = SOURCE_SCORES[source] || SOURCE_SCORES.default\n  const typeScore = TYPE_SCORES[type] || TYPE_SCORES.default\n\n  // All else being equal prefer shorter types\n  const lengthScore = 1 - mimeType.length / 100\n\n  return facetScore + sourceScore + typeScore + lengthScore\n}\n"],"mappings":"AAAA;;AAEA;AACA,IAAIA,YAAY,GAAG;EACjB,MAAM,EAAE,GAAG;EACX,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,GAAG;EACT,MAAM,EAAE,GAAG;EACXC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,IAAIC,aAAa,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,EAAE;EACRJ,OAAO,EAAE,EAAE,CAAC;AACd,CAAC;AAED,IAAIK,WAAW,GAAG;EAChB;EACA;EACAC,WAAW,EAAE,CAAC;EAEd;EACAC,IAAI,EAAE,CAAC;EAEPP,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACAQ,MAAM,CAACC,OAAO,GAAG,SAASC,SAASA,CAAEC,QAAQ,EAAEC,MAAM,GAAG,SAAS,EAAE;EACjE,IAAID,QAAQ,KAAK,0BAA0B,EAAE;IAC3C,OAAO,CAAC;EACV;EAEA,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;EAE3C,MAAMC,KAAK,GAAGF,OAAO,CAACG,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;EAEhD,MAAMC,UAAU,GAAGnB,YAAY,CAACiB,KAAK,CAAC,IAAIjB,YAAY,CAACC,OAAO;EAC9D,MAAMmB,WAAW,GAAGlB,aAAa,CAACW,MAAM,CAAC,IAAIX,aAAa,CAACD,OAAO;EAClE,MAAMoB,SAAS,GAAGf,WAAW,CAACQ,IAAI,CAAC,IAAIR,WAAW,CAACL,OAAO;;EAE1D;EACA,MAAMqB,WAAW,GAAG,CAAC,GAAGV,QAAQ,CAACW,MAAM,GAAG,GAAG;EAE7C,OAAOJ,UAAU,GAAGC,WAAW,GAAGC,SAAS,GAAGC,WAAW;AAC3D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}