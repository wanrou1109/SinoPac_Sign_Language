{"ast":null,"code":"var _jsxFileName = \"/Users/johnsonleong/Desktop/DS/DS/Grade project/SinoPac_Sign_Language/\\u6C38\\u8C50\\u7522\\u5B78/App/src/components/SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    addMessage,\n    editMessage,\n    setRecognitionStatus,\n    recognitionStatus\n  } = useAppContext();\n  const [isRecording, setIsRecording] = useState(false);\n  const [result, setResult] = useState('');\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const editMessageID = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.messageID;\n  const {\n    selectedBranch\n  } = location.state || {};\n  const recognitionIntervalRef = useRef(null);\n  const lastRecognizedTextRef = useRef('');\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        streamRef.current = stream;\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('鏡頭開啟失敗:', error);\n        alert('無法開啟鏡頭，請確認已授予攝影機權限。');\n      }\n    };\n    setupCamera();\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (isRecording) {\n      recognitionIntervalRef.current = setInterval(async () => {\n        try {\n          const res = await fetch('http://localhost:5000/get_result');\n          const data = await res.json();\n          const newText = data.result;\n          if (newText && newText !== lastRecognizedTextRef.current) {\n            lastRecognizedTextRef.current = newText;\n            setResult(prev => prev ? `${prev} ${newText}` : newText);\n          }\n        } catch (err) {\n          console.error('取得辨識結果錯誤:', err);\n        }\n      }, 2000);\n    }\n    return () => {\n      clearInterval(recognitionIntervalRef.current);\n    };\n  }, [isRecording]);\n  useEffect(() => {\n    console.log('開始測試與後端的連接...');\n    fetch('http://localhost:8080/api/test').then(response => response.json()).then(data => console.log('後端連接測試成功:', data)).catch(error => console.error('後端連接錯誤:', error));\n  }, []);\n  const handleStartRecording = () => {\n    if (!streamRef.current) {\n      alert('鏡頭尚未準備就緒');\n      return;\n    }\n    recordedChunksRef.current = [];\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        recordedChunksRef.current.push(event.data);\n        console.log(`收到錄製片段: ${event.data.size} bytes`);\n      }\n    };\n    mediaRecorder.onstop = async () => {\n      try {\n        const blob = new Blob(recordedChunksRef.current, {\n          type: 'video/webm'\n        });\n        if (blob.size === 0) throw new Error('視訊檔案為空');\n        await uploadVideoToServer(blob);\n        setTimeout(() => {\n          setRecognitionStatus('idle');\n          if (editMessageID) {\n            editMessage(editMessageID, result);\n          } else {\n            addMessage(result, 'customer');\n          }\n          navigate('/conversation', {\n            state: {\n              selectedBranch\n            }\n          });\n        }, 1500);\n      } catch (err) {\n        console.error('處理錄製錯誤:', err);\n        alert('辨識失敗: ' + err.message);\n        setRecognitionStatus('idle');\n      }\n    };\n    mediaRecorderRef.current = mediaRecorder;\n    mediaRecorder.start(1000);\n    setIsRecording(true);\n    setRecognitionStatus('recording');\n    setResult('');\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n    setRecognitionStatus('processing');\n  };\n  const uploadVideoToServer = async videoBlob => {\n    const formData = new FormData();\n    formData.append('video', videoBlob, 'sign-language-recording.webm');\n    console.log('開始上傳視訊檔案到 /api/upload/video');\n    const response = await fetch('http://localhost:8080/api/upload/video', {\n      method: 'POST',\n      body: formData,\n      mode: 'cors'\n    });\n    if (!response.ok) {\n      const text = await response.text();\n      throw new Error(`上傳失敗: ${text}`);\n    }\n    const data = await response.json();\n    console.log('上傳成功:', data);\n    await analyzeLatestVideo();\n  };\n  const analyzeLatestVideo = async () => {\n    try {\n      console.log('呼叫 /api/analyze_latest 進行辨識...');\n      const response = await fetch('http://localhost:8080/api/analyze_latest');\n      const data = await response.json();\n      if (response.ok) {\n        if (Array.isArray(data.result)) {\n          const sentence = data.result.join(' ');\n          setResult(sentence);\n          console.log('分析結果:', sentence);\n        } else {\n          setResult(data.result); // e.g., 沒有偵測到任何手語\n          console.warn('非陣列結果:', data.result);\n        }\n      } else {\n        setResult(`錯誤：${data.error}`);\n      }\n    } catch (error) {\n      console.error('辨識 API 呼叫失敗:', error);\n      setResult('辨識過程發生錯誤');\n    }\n  };\n  const handleCancel = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n    setRecognitionStatus('idle');\n    navigate('/conversation', {\n      state: {\n        selectedBranch\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-language-recognition-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: selectedBranch || '手語／語音辨識系統',\n      showBackButton: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recognition-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:5000/video_feed\",\n          alt: \"\\u5373\\u6642\\u5F71\\u50CF\\u4E32\\u6D41\",\n          className: `mirror-video ${isRecording ? 'recording' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-bar\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: handleStartRecording,\n        disabled: recognitionStatus === 'processing',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button recording-active\",\n        onClick: handleStopRecording,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"+e1CYm8k70KImbXb1wDUMxOUKEc=\", false, function () {\n  return [useNavigate, useLocation, useAppContext];\n});\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","useAppContext","Header","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","_location$state","navigate","location","addMessage","editMessage","setRecognitionStatus","recognitionStatus","isRecording","setIsRecording","result","setResult","videoRef","mediaRecorderRef","recordedChunksRef","streamRef","editMessageID","state","messageID","selectedBranch","recognitionIntervalRef","lastRecognizedTextRef","setupCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","alert","getTracks","forEach","track","stop","setInterval","res","fetch","data","json","newText","prev","err","clearInterval","log","then","response","catch","handleStartRecording","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","size","push","onstop","blob","Blob","type","Error","uploadVideoToServer","setTimeout","message","start","handleStopRecording","videoBlob","formData","FormData","append","method","body","mode","ok","text","analyzeLatestVideo","Array","isArray","sentence","join","warn","handleCancel","className","children","title","showBackButton","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/johnsonleong/Desktop/DS/DS/Grade project/SinoPac_Sign_Language/永豐產學/App/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\n\nconst SignLanguageRecognition = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { addMessage, editMessage, setRecognitionStatus, recognitionStatus } = useAppContext();\n    const [isRecording, setIsRecording] = useState(false);\n    const [result, setResult] = useState('');\n    const videoRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChunksRef = useRef([]);\n    const streamRef = useRef(null);\n    const editMessageID = location.state?.messageID;\n    const { selectedBranch } = location.state || {};\n\n    const recognitionIntervalRef = useRef(null);\n    const lastRecognizedTextRef = useRef('');\n\n    useEffect(() => {\n        const setupCamera = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                streamRef.current = stream;\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            } catch (error) {\n                console.error('鏡頭開啟失敗:', error);\n                alert('無法開啟鏡頭，請確認已授予攝影機權限。');\n            }\n        };\n\n        setupCamera();\n\n        return () => {\n            if (streamRef.current) {\n                streamRef.current.getTracks().forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isRecording) {\n            recognitionIntervalRef.current = setInterval(async () => {\n                try {\n                    const res = await fetch('http://localhost:5000/get_result');\n                    const data = await res.json();\n                    const newText = data.result;\n\n                    if (newText && newText !== lastRecognizedTextRef.current) {\n                        lastRecognizedTextRef.current = newText;\n                        setResult(prev => (prev ? `${prev} ${newText}` : newText));\n                    }\n                } catch (err) {\n                    console.error('取得辨識結果錯誤:', err);\n                }\n            }, 2000);\n        }\n\n        return () => {\n            clearInterval(recognitionIntervalRef.current);\n        };\n    }, [isRecording]);\n\n    useEffect(() => {\n        console.log('開始測試與後端的連接...');\n        fetch('http://localhost:8080/api/test')\n            .then(response => response.json())\n            .then(data => console.log('後端連接測試成功:', data))\n            .catch(error => console.error('後端連接錯誤:', error));\n    }, []);\n\n    const handleStartRecording = () => {\n        if (!streamRef.current) {\n            alert('鏡頭尚未準備就緒');\n            return;\n        }\n\n        recordedChunksRef.current = [];\n        const mediaRecorder = new MediaRecorder(streamRef.current, { mimeType: 'video/webm' });\n\n        mediaRecorder.ondataavailable = event => {\n            if (event.data.size > 0) {\n                recordedChunksRef.current.push(event.data);\n                console.log(`收到錄製片段: ${event.data.size} bytes`);\n            }\n        };\n\n        mediaRecorder.onstop = async () => {\n            try {\n                const blob = new Blob(recordedChunksRef.current, { type: 'video/webm' });\n                if (blob.size === 0) throw new Error('視訊檔案為空');\n\n                await uploadVideoToServer(blob);\n\n                setTimeout(() => {\n                    setRecognitionStatus('idle');\n                    if (editMessageID) {\n                        editMessage(editMessageID, result);\n                    } else {\n                        addMessage(result, 'customer');\n                    }\n                    navigate('/conversation', { state: { selectedBranch } });\n                }, 1500);\n            } catch (err) {\n                console.error('處理錄製錯誤:', err);\n                alert('辨識失敗: ' + err.message);\n                setRecognitionStatus('idle');\n            }\n        };\n\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start(1000);\n        setIsRecording(true);\n        setRecognitionStatus('recording');\n        setResult('');\n    };\n\n    const handleStopRecording = () => {\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n            mediaRecorderRef.current.stop();\n        }\n        setIsRecording(false);\n        setRecognitionStatus('processing');\n    };\n\n    const uploadVideoToServer = async (videoBlob) => {\n        const formData = new FormData();\n        formData.append('video', videoBlob, 'sign-language-recording.webm');\n\n        console.log('開始上傳視訊檔案到 /api/upload/video');\n\n        const response = await fetch('http://localhost:8080/api/upload/video', {\n            method: 'POST',\n            body: formData,\n            mode: 'cors',\n        });\n\n        if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`上傳失敗: ${text}`);\n        }\n\n        const data = await response.json();\n        console.log('上傳成功:', data);\n\n        await analyzeLatestVideo();\n    };\n\n    const analyzeLatestVideo = async () => {\n        try {\n            console.log('呼叫 /api/analyze_latest 進行辨識...');\n            const response = await fetch('http://localhost:8080/api/analyze_latest');\n            const data = await response.json();\n\n            if (response.ok) {\n                if (Array.isArray(data.result)) {\n                    const sentence = data.result.join(' ');\n                    setResult(sentence);\n                    console.log('分析結果:', sentence);\n                } else {\n                    setResult(data.result); // e.g., 沒有偵測到任何手語\n                    console.warn('非陣列結果:', data.result);\n                }\n            } else {\n                setResult(`錯誤：${data.error}`);\n            }\n        } catch (error) {\n            console.error('辨識 API 呼叫失敗:', error);\n            setResult('辨識過程發生錯誤');\n        }\n    };\n\n    const handleCancel = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n        }\n        setIsRecording(false);\n        setRecognitionStatus('idle');\n        navigate('/conversation', { state: { selectedBranch } });\n    };\n\n    return (\n        <div className='sign-language-recognition-screen'>\n            <Header title={selectedBranch || '手語／語音辨識系統'} showBackButton={handleCancel} />\n            <div className='recognition-container'>\n                <div className='video-container'>\n                   <img\n                    src=\"http://localhost:5000/video_feed\"\n                    alt=\"即時影像串流\"\n                    className={`mirror-video ${isRecording ? 'recording' : ''}`}\n                    />\n                </div>\n            </div>\n            <div className='action-bar'>\n                {!isRecording ? (\n                    <button\n                        className='record-button'\n                        onClick={handleStartRecording}\n                        disabled={recognitionStatus === 'processing'}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                ) : (\n                    <button\n                        className='record-button recording-active'\n                        onClick={handleStopRecording}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}