{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\nvar bodyParser = require('body-parser');\nvar EventEmitter = require('node:events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Router = require('router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function (req, res, next) {\n    app.handle(req, res, next);\n  };\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: app\n    }\n  });\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: app\n    }\n  });\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Router.Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json;\nexports.raw = bodyParser.raw;\nexports.static = require('serve-static');\nexports.text = bodyParser.text;\nexports.urlencoded = bodyParser.urlencoded;","map":{"version":3,"names":["bodyParser","require","EventEmitter","mixin","proto","Router","req","res","exports","module","createApplication","app","next","handle","prototype","request","Object","create","configurable","enumerable","writable","value","response","init","application","Route","json","raw","static","text","urlencoded"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/node_modules/express/lib/express.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('node:events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Router = require('router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Router.Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIC,YAAY,GAAGD,OAAO,CAAC,aAAa,CAAC,CAACC,YAAY;AACtD,IAAIC,KAAK,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACxC,IAAIG,KAAK,GAAGH,OAAO,CAAC,eAAe,CAAC;AACpC,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIK,GAAG,GAAGL,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIM,GAAG,GAAGN,OAAO,CAAC,YAAY,CAAC;;AAE/B;AACA;AACA;;AAEAO,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGE,iBAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,iBAAiBA,CAAA,EAAG;EAC3B,IAAIC,GAAG,GAAG,SAAAA,CAASL,GAAG,EAAEC,GAAG,EAAEK,IAAI,EAAE;IACjCD,GAAG,CAACE,MAAM,CAACP,GAAG,EAAEC,GAAG,EAAEK,IAAI,CAAC;EAC5B,CAAC;EAEDT,KAAK,CAACQ,GAAG,EAAET,YAAY,CAACY,SAAS,EAAE,KAAK,CAAC;EACzCX,KAAK,CAACQ,GAAG,EAAEP,KAAK,EAAE,KAAK,CAAC;;EAExB;EACAO,GAAG,CAACI,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACX,GAAG,EAAE;IAC/BK,GAAG,EAAE;MAAEO,YAAY,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI;MAAEC,KAAK,EAAEV;IAAI;EAC1E,CAAC,CAAC;;EAEF;EACAA,GAAG,CAACW,QAAQ,GAAGN,MAAM,CAACC,MAAM,CAACV,GAAG,EAAE;IAChCI,GAAG,EAAE;MAAEO,YAAY,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI;MAAEC,KAAK,EAAEV;IAAI;EAC1E,CAAC,CAAC;EAEFA,GAAG,CAACY,IAAI,CAAC,CAAC;EACV,OAAOZ,GAAG;AACZ;;AAEA;AACA;AACA;;AAEAH,OAAO,CAACgB,WAAW,GAAGpB,KAAK;AAC3BI,OAAO,CAACO,OAAO,GAAGT,GAAG;AACrBE,OAAO,CAACc,QAAQ,GAAGf,GAAG;;AAEtB;AACA;AACA;;AAEAC,OAAO,CAACiB,KAAK,GAAGpB,MAAM,CAACoB,KAAK;AAC5BjB,OAAO,CAACH,MAAM,GAAGA,MAAM;;AAEvB;AACA;AACA;;AAEAG,OAAO,CAACkB,IAAI,GAAG1B,UAAU,CAAC0B,IAAI;AAC9BlB,OAAO,CAACmB,GAAG,GAAG3B,UAAU,CAAC2B,GAAG;AAC5BnB,OAAO,CAACoB,MAAM,GAAG3B,OAAO,CAAC,cAAc,CAAC;AACxCO,OAAO,CAACqB,IAAI,GAAG7B,UAAU,CAAC6B,IAAI;AAC9BrB,OAAO,CAACsB,UAAU,GAAG9B,UAAU,CAAC8B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}