{"ast":null,"code":"/*!\n * router\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nconst debug = require('debug')('router:route');\nconst Layer = require('./layer');\nconst {\n  METHODS\n} = require('node:http');\n\n/**\n * Module variables.\n * @private\n */\n\nconst slice = Array.prototype.slice;\nconst flatten = Array.prototype.flat;\nconst methods = METHODS.map(method => method.toLowerCase());\n\n/**\n * Expose `Route`.\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @api private\n */\n\nfunction Route(path) {\n  debug('new %o', path);\n  this.path = path;\n  this.stack = [];\n\n  // route handlers for various http methods\n  this.methods = Object.create(null);\n}\n\n/**\n * @private\n */\n\nRoute.prototype._handlesMethod = function _handlesMethod(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  // normalize name\n  let name = typeof method === 'string' ? method.toLowerCase() : method;\n  if (name === 'head' && !this.methods.head) {\n    name = 'get';\n  }\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._methods = function _methods() {\n  const methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n  for (let i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n *\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  let idx = 0;\n  const stack = this.stack;\n  let sync = 0;\n  if (stack.length === 0) {\n    return done();\n  }\n  let method = typeof req.method === 'string' ? req.method.toLowerCase() : req.method;\n  if (method === 'head' && !this.methods.head) {\n    method = 'get';\n  }\n  req.route = this;\n  next();\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err);\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      return done(err);\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err);\n    }\n    let layer;\n    let match;\n\n    // find next matching layer\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = !layer.method || layer.method === method;\n    }\n\n    // no match\n    if (match !== true) {\n      return done(err);\n    }\n    if (err) {\n      layer.handleError(err, req, res, next);\n    } else {\n      layer.handleRequest(req, res, next);\n    }\n    sync = 0;\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next()\n *   }\n *\n *   function validate_user(req, res, next){\n *     next()\n *   }\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world')\n *   })\n *\n * @param {array|function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all(handler) {\n  const callbacks = flatten.call(slice.call(arguments), Infinity);\n  if (callbacks.length === 0) {\n    throw new TypeError('argument handler is required');\n  }\n  for (let i = 0; i < callbacks.length; i++) {\n    const fn = callbacks[i];\n    if (typeof fn !== 'function') {\n      throw new TypeError('argument handler must be a function');\n    }\n    const layer = Layer('/', {}, fn);\n    layer.method = undefined;\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n  return this;\n};\nmethods.forEach(function (method) {\n  Route.prototype[method] = function (handler) {\n    const callbacks = flatten.call(slice.call(arguments), Infinity);\n    if (callbacks.length === 0) {\n      throw new TypeError('argument handler is required');\n    }\n    for (let i = 0; i < callbacks.length; i++) {\n      const fn = callbacks[i];\n      if (typeof fn !== 'function') {\n        throw new TypeError('argument handler must be a function');\n      }\n      debug('%s %s', method, this.path);\n      const layer = Layer('/', {}, fn);\n      layer.method = method;\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n    return this;\n  };\n});","map":{"version":3,"names":["debug","require","Layer","METHODS","slice","Array","prototype","flatten","flat","methods","map","method","toLowerCase","module","exports","Route","path","stack","Object","create","_handlesMethod","_all","name","head","Boolean","_methods","keys","get","push","i","length","toUpperCase","dispatch","req","res","done","idx","sync","route","next","err","setImmediate","layer","match","handleError","handleRequest","all","handler","callbacks","call","arguments","Infinity","TypeError","fn","undefined","forEach"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/node_modules/router/lib/route.js"],"sourcesContent":["/*!\n * router\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nconst debug = require('debug')('router:route')\nconst Layer = require('./layer')\nconst { METHODS } = require('node:http')\n\n/**\n * Module variables.\n * @private\n */\n\nconst slice = Array.prototype.slice\nconst flatten = Array.prototype.flat\nconst methods = METHODS.map((method) => method.toLowerCase())\n\n/**\n * Expose `Route`.\n */\n\nmodule.exports = Route\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @api private\n */\n\nfunction Route (path) {\n  debug('new %o', path)\n  this.path = path\n  this.stack = []\n\n  // route handlers for various http methods\n  this.methods = Object.create(null)\n}\n\n/**\n * @private\n */\n\nRoute.prototype._handlesMethod = function _handlesMethod (method) {\n  if (this.methods._all) {\n    return true\n  }\n\n  // normalize name\n  let name = typeof method === 'string'\n    ? method.toLowerCase()\n    : method\n\n  if (name === 'head' && !this.methods.head) {\n    name = 'get'\n  }\n\n  return Boolean(this.methods[name])\n}\n\n/**\n * @return {array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._methods = function _methods () {\n  const methods = Object.keys(this.methods)\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head')\n  }\n\n  for (let i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase()\n  }\n\n  return methods\n}\n\n/**\n * dispatch req, res into this route\n *\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch (req, res, done) {\n  let idx = 0\n  const stack = this.stack\n  let sync = 0\n\n  if (stack.length === 0) {\n    return done()\n  }\n\n  let method = typeof req.method === 'string'\n    ? req.method.toLowerCase()\n    : req.method\n\n  if (method === 'head' && !this.methods.head) {\n    method = 'get'\n  }\n\n  req.route = this\n\n  next()\n\n  function next (err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done()\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      return done(err)\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    let layer\n    let match\n\n    // find next matching layer\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++]\n      match = !layer.method || layer.method === method\n    }\n\n    // no match\n    if (match !== true) {\n      return done(err)\n    }\n\n    if (err) {\n      layer.handleError(err, req, res, next)\n    } else {\n      layer.handleRequest(req, res, next)\n    }\n\n    sync = 0\n  }\n}\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next()\n *   }\n *\n *   function validate_user(req, res, next){\n *     next()\n *   }\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world')\n *   })\n *\n * @param {array|function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all (handler) {\n  const callbacks = flatten.call(slice.call(arguments), Infinity)\n\n  if (callbacks.length === 0) {\n    throw new TypeError('argument handler is required')\n  }\n\n  for (let i = 0; i < callbacks.length; i++) {\n    const fn = callbacks[i]\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('argument handler must be a function')\n    }\n\n    const layer = Layer('/', {}, fn)\n    layer.method = undefined\n\n    this.methods._all = true\n    this.stack.push(layer)\n  }\n\n  return this\n}\n\nmethods.forEach(function (method) {\n  Route.prototype[method] = function (handler) {\n    const callbacks = flatten.call(slice.call(arguments), Infinity)\n\n    if (callbacks.length === 0) {\n      throw new TypeError('argument handler is required')\n    }\n\n    for (let i = 0; i < callbacks.length; i++) {\n      const fn = callbacks[i]\n\n      if (typeof fn !== 'function') {\n        throw new TypeError('argument handler must be a function')\n      }\n\n      debug('%s %s', method, this.path)\n\n      const layer = Layer('/', {}, fn)\n      layer.method = method\n\n      this.methods[method] = true\n      this.stack.push(layer)\n    }\n\n    return this\n  }\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}