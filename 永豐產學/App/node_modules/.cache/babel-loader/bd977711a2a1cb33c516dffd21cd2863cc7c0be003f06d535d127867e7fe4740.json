{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String|NodeJS.ArrayBufferView|crypto.KeyObject} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function (val, secret) {\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if (null == secret) throw new TypeError(\"Secret key must be provided.\");\n  return val + '.' + crypto.createHmac('sha256', secret).update(val).digest('base64').replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `input` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} input\n * @param {String|NodeJS.ArrayBufferView|crypto.KeyObject} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function (input, secret) {\n  if ('string' != typeof input) throw new TypeError(\"Signed cookie string must be provided.\");\n  if (null == secret) throw new TypeError(\"Secret key must be provided.\");\n  var tentativeValue = input.slice(0, input.lastIndexOf('.')),\n    expectedInput = exports.sign(tentativeValue, secret),\n    expectedBuffer = Buffer.from(expectedInput),\n    inputBuffer = Buffer.from(input);\n  return expectedBuffer.length === inputBuffer.length && crypto.timingSafeEqual(expectedBuffer, inputBuffer) ? tentativeValue : false;\n};","map":{"version":3,"names":["crypto","require","exports","sign","val","secret","TypeError","createHmac","update","digest","replace","unsign","input","tentativeValue","slice","lastIndexOf","expectedInput","expectedBuffer","Buffer","from","inputBuffer","length","timingSafeEqual"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/node_modules/cookie-signature/index.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String|NodeJS.ArrayBufferView|crypto.KeyObject} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if (null == secret) throw new TypeError(\"Secret key must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `input` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} input\n * @param {String|NodeJS.ArrayBufferView|crypto.KeyObject} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(input, secret){\n  if ('string' != typeof input) throw new TypeError(\"Signed cookie string must be provided.\");\n  if (null == secret) throw new TypeError(\"Secret key must be provided.\");\n  var tentativeValue = input.slice(0, input.lastIndexOf('.')),\n      expectedInput = exports.sign(tentativeValue, secret),\n      expectedBuffer = Buffer.from(expectedInput),\n      inputBuffer = Buffer.from(input);\n  return (\n    expectedBuffer.length === inputBuffer.length &&\n    crypto.timingSafeEqual(expectedBuffer, inputBuffer)\n   ) ? tentativeValue : false;\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACC,IAAI,GAAG,UAASC,GAAG,EAAEC,MAAM,EAAC;EAClC,IAAI,QAAQ,IAAI,OAAOD,GAAG,EAAE,MAAM,IAAIE,SAAS,CAAC,4CAA4C,CAAC;EAC7F,IAAI,IAAI,IAAID,MAAM,EAAE,MAAM,IAAIC,SAAS,CAAC,8BAA8B,CAAC;EACvE,OAAOF,GAAG,GAAG,GAAG,GAAGJ,MAAM,CACtBO,UAAU,CAAC,QAAQ,EAAEF,MAAM,CAAC,CAC5BG,MAAM,CAACJ,GAAG,CAAC,CACXK,MAAM,CAAC,QAAQ,CAAC,CAChBC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,OAAO,CAACS,MAAM,GAAG,UAASC,KAAK,EAAEP,MAAM,EAAC;EACtC,IAAI,QAAQ,IAAI,OAAOO,KAAK,EAAE,MAAM,IAAIN,SAAS,CAAC,wCAAwC,CAAC;EAC3F,IAAI,IAAI,IAAID,MAAM,EAAE,MAAM,IAAIC,SAAS,CAAC,8BAA8B,CAAC;EACvE,IAAIO,cAAc,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,EAAEF,KAAK,CAACG,WAAW,CAAC,GAAG,CAAC,CAAC;IACvDC,aAAa,GAAGd,OAAO,CAACC,IAAI,CAACU,cAAc,EAAER,MAAM,CAAC;IACpDY,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC;IAC3CI,WAAW,GAAGF,MAAM,CAACC,IAAI,CAACP,KAAK,CAAC;EACpC,OACEK,cAAc,CAACI,MAAM,KAAKD,WAAW,CAACC,MAAM,IAC5CrB,MAAM,CAACsB,eAAe,CAACL,cAAc,EAAEG,WAAW,CAAC,GAChDP,cAAc,GAAG,KAAK;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}