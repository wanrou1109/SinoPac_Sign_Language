{"ast":null,"code":"var _jsxFileName = \"/Users/johnsonleong/Desktop/DS/DS/Grade project/SinoPac_Sign_Language/\\u6C38\\u8C50\\u7522\\u5B78/App/src/components/SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    addMessage,\n    editMessage\n  } = useAppContext();\n  const [isRecording, setIsRecording, videoUploaded, setVideoUploaded] = useState(false);\n  const [recognitionStatus, setRecognitionStatus] = useState('idle');\n  const [result, setResult] = useState('');\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const streamRef = useRef(null);\n  const recordedChuncksRef = useRef([]);\n  const editMessageID = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.messageID;\n\n  // 鏡頭啟動\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          streamRef.current = stream;\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        }\n      } catch (error) {\n        console.error('鏡頭開啟失敗:', error);\n        alert('無法開啟鏡頭，請確認您已授予攝影機存取權限。');\n      }\n    };\n    setupCamera();\n\n    // 清理函數\n    return () => {\n      if (streamRef.current) {\n        const tracks = streamRef.current.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // 測試與後端的連接\n  useEffect(() => {\n    console.log('開始測試與後端的連接...');\n    fetch('http://localhost:8080/api/test').then(response => {\n      console.log('收到後端回應:', response.status);\n      return response.json();\n    }).then(data => console.log('後端連接測試成功:', data)).catch(error => console.error('後端連接錯誤:', error));\n  }, []);\n\n  // 開始錄製\n  const handleStartRecording = () => {\n    if (!streamRef.current) {\n      alert('鏡頭尚未準備就緒，請稍後再試。');\n      return;\n    }\n    recordedChuncksRef.current = [];\n    try {\n      const mediaRecorder = new MediaRecorder(streamRef.current, {\n        mimeType: 'video/webm;codecs=vp9'\n      });\n      mediaRecorder.ondataavailable = event => {\n        if (event.data && event.data.size > 0) {\n          recordedChuncksRef.current.push(event.data);\n          console.log(`收到錄製片段: ${event.data.size} 位元組`);\n        }\n      };\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start(1000); // 每秒觸發一次 dataavailable 事件\n      console.log('開始錄製視訊');\n      setIsRecording(true);\n      setRecognitionStatus('recording');\n      setResult('');\n    } catch (error) {\n      console.error('啟動錄製時發生錯誤:', error);\n      alert(`無法開始錄製: ${error.message}`);\n    }\n  };\n\n  // 停止錄製\n  const handleStopRecording = () => {\n    // 檢查是否有進行中的錄製\n    if (!mediaRecorderRef.current || mediaRecorderRef.current.state === 'inactive') {\n      console.warn('沒有進行中的錄製');\n      return;\n    }\n    console.log('停止錄製');\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n    setRecognitionStatus('processing');\n\n    // 處理錄製完成事件\n    mediaRecorderRef.current.onstop = async () => {\n      try {\n        // 檢查錄製的資料是否有效\n        console.log(`錄製完成，共 ${recordedChuncksRef.current.length} 個片段`);\n        if (recordedChuncksRef.current.length === 0) {\n          throw new Error('未收到任何視訊資料');\n        }\n\n        // 創建視頻 Blob\n        const blob = new Blob(recordedChuncksRef.current, {\n          type: 'video/webm'\n        });\n        console.log(`視訊檔案大小: ${blob.size} 位元組`);\n        if (blob.size === 0) {\n          throw new Error('視訊檔案大小為 0');\n        }\n\n        // 上傳視頻到伺服器\n        await uploadVideoToServer(blob);\n\n        // 上傳成功後立即發起分析請求\n        await analyzeLatestVideo();\n      } catch (error) {\n        console.error('處理錄製視訊失敗：', error);\n        setRecognitionStatus('idle');\n        alert('處理視訊失敗，請重試: ' + error.message);\n      }\n    };\n  };\n\n  // 上傳影片到伺服器\n  const uploadVideoToServer = async videoBlob => {\n    // 準備上傳數據\n    const formData = new FormData();\n    formData.append('video', videoBlob, 'sign-language-recording.webm');\n    console.log('準備上傳視訊檔案');\n    console.log('視訊檔案大小:', videoBlob.size, '位元組');\n    try {\n      console.log('開始上傳視訊檔案到 /api/upload/video');\n\n      // 發送上傳請求\n      const response = await fetch('http://localhost:8080/api/upload/video', {\n        method: 'POST',\n        body: formData,\n        mode: 'cors',\n        credentials: 'omit'\n      });\n      console.log('收到伺服器回應', response.status);\n\n      // 檢查伺服器回應\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('伺服器回應錯誤:', errorText);\n        throw new Error(`伺服器回應錯誤: ${response.status} ${errorText}`);\n      }\n\n      // 解析回應數據\n      const data = await response.json();\n      console.log('伺服器回應數據', data);\n      return data;\n    } catch (error) {\n      console.error('上傳過程中發生錯誤:', error);\n      throw error;\n    }\n  };\n\n  // 分析最新上傳影片\n  const analyzeLatestVideo = async () => {\n    try {\n      // 設置處理中狀態\n      setResult('處理中...');\n\n      // 使用 setTimeout 給後端一些處理時間\n      setTimeout(async () => {\n        try {\n          const response = await fetch('http://localhost:8080/api/analyze_latest');\n          if (!response.ok) {\n            throw new Error(`網路回應不正常: ${response.status}`);\n          }\n          const data = await response.json();\n          console.log('手語辨識結果:', data);\n\n          // 處理辨識結果\n          if (data.result && data.result.length > 0) {\n            var _location$state2;\n            const recognizedText = data.result.join(' ');\n            setResult(recognizedText);\n\n            // 更新或添加訊息\n            const messageID = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.messageID;\n            if (messageID) {\n              editMessage(messageID, recognizedText);\n            } else {\n              // 使用 addMessage 函數\n              addMessage(recognizedText, 'customer');\n            }\n\n            // 完成處理\n            setRecognitionStatus('idle');\n\n            // 返回對話頁面\n            navigate('/conversation');\n          } else {\n            setResult('無法辨識手語內容');\n            setRecognitionStatus('idle');\n          }\n        } catch (error) {\n          console.error('取得手語辨識結果時發生錯誤:', error);\n          setResult('辨識過程發生錯誤，請重試');\n          setRecognitionStatus('idle');\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('辨識 API 呼叫失敗:', error);\n      setResult('辨識過程發生錯誤');\n      setRecognitionStatus('idle');\n    }\n  };\n\n  // 取消 and 返回\n  const handleBack = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n    setRecognitionStatus('idle');\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-language-recognition-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showBackButton: true,\n      onBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recognition-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: `${isRecording ? 'recording' : ''} mirror-video`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-bar\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: handleStartRecording,\n        disabled: recognitionStatus === 'processing',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button recording-active\",\n        onClick: handleStopRecording,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"6EKEZWx+RXqEaepKNb5l/ngidPY=\", false, function () {\n  return [useNavigate, useLocation, useAppContext];\n});\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","useAppContext","Header","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","_location$state","navigate","location","addMessage","editMessage","isRecording","setIsRecording","videoUploaded","setVideoUploaded","recognitionStatus","setRecognitionStatus","result","setResult","videoRef","mediaRecorderRef","streamRef","recordedChuncksRef","editMessageID","state","messageID","setupCamera","navigator","mediaDevices","getUserMedia","stream","video","current","srcObject","error","console","alert","tracks","getTracks","forEach","track","stop","log","fetch","then","response","status","json","data","catch","handleStartRecording","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","size","push","start","message","handleStopRecording","warn","onstop","length","Error","blob","Blob","type","uploadVideoToServer","analyzeLatestVideo","videoBlob","formData","FormData","append","method","body","mode","credentials","ok","errorText","text","setTimeout","_location$state2","recognizedText","join","handleBack","className","children","showBackButton","onBack","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/johnsonleong/Desktop/DS/DS/Grade project/SinoPac_Sign_Language/永豐產學/App/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\n\nconst SignLanguageRecognition = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { addMessage, editMessage } = useAppContext();\n    const [ isRecording, setIsRecording, videoUploaded, setVideoUploaded ] = useState(false);\n    const [ recognitionStatus, setRecognitionStatus ] = useState('idle');\n    const [ result, setResult ] = useState('');\n    const videoRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const streamRef = useRef(null);\n    const recordedChuncksRef = useRef([]);\n    const editMessageID = location.state?.messageID;\n\n    // 鏡頭啟動\n    useEffect(() => {\n        const setupCamera = async () => {\n            try {\n                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                    const stream = await navigator.mediaDevices.getUserMedia({video: true});\n                    streamRef.current = stream;\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n                }\n            } catch (error) {\n                console.error('鏡頭開啟失敗:', error);\n                alert('無法開啟鏡頭，請確認您已授予攝影機存取權限。');\n            }\n        };\n        \n        setupCamera();\n\n        // 清理函數\n        return () => {\n            if(streamRef.current) {\n                const tracks = streamRef.current.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    // 測試與後端的連接\n    useEffect(() => {\n        console.log('開始測試與後端的連接...');\n        fetch('http://localhost:8080/api/test')\n            .then(response => {\n                console.log('收到後端回應:', response.status);\n                return response.json();\n            })\n            .then(data => console.log('後端連接測試成功:', data))\n            .catch(error => console.error('後端連接錯誤:', error));\n    }, []);\n\n    // 開始錄製\n    const handleStartRecording = () => {\n        if (!streamRef.current) {\n            alert('鏡頭尚未準備就緒，請稍後再試。');\n            return;\n        }\n\n        recordedChuncksRef.current = [];\n        try {\n            const mediaRecorder = new MediaRecorder(streamRef.current, {\n                mimeType: 'video/webm;codecs=vp9'\n            });\n\n            mediaRecorder.ondataavailable = (event) => {\n                if (event.data && event.data.size > 0) {\n                    recordedChuncksRef.current.push(event.data);\n                    console.log(`收到錄製片段: ${event.data.size} 位元組`);\n                }\n            };\n\n            mediaRecorderRef.current = mediaRecorder;\n            mediaRecorder.start(1000); // 每秒觸發一次 dataavailable 事件\n            console.log('開始錄製視訊');\n            setIsRecording(true);\n            setRecognitionStatus('recording');\n            setResult('');\n        } catch (error) {\n            console.error('啟動錄製時發生錯誤:', error);\n            alert(`無法開始錄製: ${error.message}`);\n        }\n    };\n\n    // 停止錄製\n    const handleStopRecording = () => {\n        // 檢查是否有進行中的錄製\n        if (!mediaRecorderRef.current || mediaRecorderRef.current.state === 'inactive') {\n            console.warn('沒有進行中的錄製');\n            return;\n        }\n    \n        console.log('停止錄製');\n        mediaRecorderRef.current.stop();\n        setIsRecording(false);\n        setRecognitionStatus('processing');\n    \n        // 處理錄製完成事件\n        mediaRecorderRef.current.onstop = async () => {\n            try {\n                // 檢查錄製的資料是否有效\n                console.log(`錄製完成，共 ${recordedChuncksRef.current.length} 個片段`);\n                if (recordedChuncksRef.current.length === 0) {\n                    throw new Error('未收到任何視訊資料');\n                }\n                \n                // 創建視頻 Blob\n                const blob = new Blob(recordedChuncksRef.current, { type: 'video/webm' });\n                console.log(`視訊檔案大小: ${blob.size} 位元組`);\n                \n                if (blob.size === 0) {\n                    throw new Error('視訊檔案大小為 0');\n                }\n                \n                // 上傳視頻到伺服器\n                await uploadVideoToServer(blob);\n                \n                // 上傳成功後立即發起分析請求\n                await analyzeLatestVideo();\n                \n            } catch (error) {\n                console.error('處理錄製視訊失敗：', error);\n                setRecognitionStatus('idle');\n                alert('處理視訊失敗，請重試: ' + error.message);\n            }\n        };\n    };\n\n    // 上傳影片到伺服器\n    const uploadVideoToServer = async (videoBlob) => {\n        // 準備上傳數據\n        const formData = new FormData();\n        formData.append('video', videoBlob, 'sign-language-recording.webm');\n    \n        console.log('準備上傳視訊檔案');\n        console.log('視訊檔案大小:', videoBlob.size, '位元組');\n    \n        try {\n            console.log('開始上傳視訊檔案到 /api/upload/video');\n    \n            // 發送上傳請求\n            const response = await fetch('http://localhost:8080/api/upload/video', {\n                method: 'POST',\n                body: formData,\n                mode: 'cors',\n                credentials: 'omit',\n            });\n    \n            console.log('收到伺服器回應', response.status);\n    \n            // 檢查伺服器回應\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error('伺服器回應錯誤:', errorText);\n                throw new Error(`伺服器回應錯誤: ${response.status} ${errorText}`);\n            }\n    \n            // 解析回應數據\n            const data = await response.json();\n            console.log('伺服器回應數據', data);\n    \n            return data;\n        } catch (error) {\n            console.error('上傳過程中發生錯誤:', error);\n            throw error;\n        }\n    };\n\n    // 分析最新上傳影片\n    const analyzeLatestVideo = async () => {\n        try {\n            // 設置處理中狀態\n            setResult('處理中...');\n            \n            // 使用 setTimeout 給後端一些處理時間\n            setTimeout(async () => {\n                try {\n                    const response = await fetch('http://localhost:8080/api/analyze_latest');\n                    \n                    if (!response.ok) {\n                        throw new Error(`網路回應不正常: ${response.status}`);\n                    }\n                    \n                    const data = await response.json();\n                    console.log('手語辨識結果:', data);\n                    \n                    // 處理辨識結果\n                    if (data.result && data.result.length > 0) {\n                        const recognizedText = data.result.join(' ');\n                        setResult(recognizedText);\n                        \n                        // 更新或添加訊息\n                        const messageID = location.state?.messageID;\n                        if (messageID) {\n                            editMessage(messageID, recognizedText);\n                        } else {\n                            // 使用 addMessage 函數\n                            addMessage(recognizedText, 'customer');\n                        }\n                        \n                        // 完成處理\n                        setRecognitionStatus('idle');\n                        \n                        // 返回對話頁面\n                        navigate('/conversation');\n                    } else {\n                        setResult('無法辨識手語內容');\n                        setRecognitionStatus('idle');\n                    }\n                } catch (error) {\n                    console.error('取得手語辨識結果時發生錯誤:', error);\n                    setResult('辨識過程發生錯誤，請重試');\n                    setRecognitionStatus('idle');\n                }\n            }, 1500);\n        } catch (error) {\n            console.error('辨識 API 呼叫失敗:', error);\n            setResult('辨識過程發生錯誤');\n            setRecognitionStatus('idle');\n        }\n    };\n\n    // 取消 and 返回\n    const handleBack = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n        }\n        setIsRecording(false);\n        setRecognitionStatus('idle');\n        navigate(-1);\n    };\n\n    return (\n        <div className='sign-language-recognition-screen'>\n            <Header showBackButton = {true} onBack = {handleBack} />\n\n            <div className='recognition-container'>\n                <div className='video-container'>\n                    <video\n                        ref={videoRef}\n                        autoPlay\n                        playsInline\n                        muted\n                        className = {`${isRecording ? 'recording' : ''} mirror-video`} \n                    /> \n                </div>\n            </div>\n\n            <div className='action-bar'>\n                {!isRecording ? (\n                    <button \n                        className='record-button'\n                        onClick={handleStartRecording}\n                        disabled={recognitionStatus === 'processing'}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                ) : (\n                    <button\n                        className='record-button recording-active'\n                        onClick={handleStopRecording}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}