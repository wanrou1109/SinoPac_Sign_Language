{"ast":null,"code":"var _jsxFileName = \"/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/\\u6C38\\u8C50\\u7522\\u5B78/App/src/components/SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    addMessage,\n    editMessage,\n    setRecognitionStatus,\n    recognitionStatus\n  } = useAppContext();\n  const [isRecording, setIsRecording] = useState(false);\n  const [result, setResult] = useState('');\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChuncksRef = useRef([]);\n  const streamRef = useRef(null);\n  const editMessageID = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.messageID;\n  const {\n    selectedBranch\n  } = location.state || {};\n\n  // 模擬鏡頭啟動\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          streamRef.current = stream;\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        }\n      } catch (error) {\n        console.error('鏡頭開啟失敗:', error);\n      }\n    };\n    setupCamera();\n\n    // 清理函數\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // 測試與後端的連接\n  useEffect(() => {\n    console.log('開始測試與後端的連接...');\n    fetch('http://localhost:5000/api/test').then(response => {\n      console.log('收到後端回應:', response.status);\n      return response.json();\n    }).then(data => console.log('後端連接測試成功:', data)).catch(error => console.error('後端連接錯誤:', error));\n  }, []);\n\n  // 手語辨識模擬回應\n  useEffect(() => {\n    if (isRecording) {\n      // 模擬手語辨識結果\n      const timer = setTimeout(() => {\n        setResult('（模擬）：我要辦理存款。');\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [isRecording]);\n\n  // 開始錄製\n  const handleStartRecording = () => {\n    if (!streamRef.current) return;\n    recordedChuncksRef.current = [];\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        recordedChuncksRef.current.push(event.data);\n      }\n    };\n    mediaRecorderRef.current = mediaRecorder;\n    mediaRecorder.start();\n    setIsRecording(true);\n    setRecognitionStatus('recording');\n    setResult('');\n  };\n\n  // 停止錄製\n  const handleStopRecording = () => {\n    if (!mediaRecorderRef.current) return;\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n    setRecognitionStatus('processing');\n\n    // 處理錄好的影像\n    mediaRecorderRef.current.onstop = async () => {\n      try {\n        // 創建 Blob 並上傳到後端\n        const blob = new Blob(recordedChuncksRef.current, {\n          type: 'video/webm'\n        });\n\n        // 顯示上傳資訊\n        console.log('準備上傳視訊檔案', blob.size, '位元組');\n\n        // 上傳影片\n        await uploadVideoToServer(blob);\n\n        // 模擬處理延遲\n        setTimeout(() => {\n          setRecognitionStatus('idle');\n\n          // 編輯或新增訊息\n          if (editMessageID) {\n            editMessage(editMessageID, result);\n          } else {\n            addMessage(result, 'customer');\n          }\n\n          // 回 conversation page\n          navigate('/conversation');\n        }, 1500);\n      } catch (error) {\n        console.error('上傳影像失敗：', error);\n        setRecognitionStatus('idle');\n        alert('上傳影片失敗，請重試: ' + error.message);\n      }\n    };\n  };\n\n  // 上傳到後端服務器 - 重點修正\n  const uploadVideoToServer = async videoBlob => {\n    const formData = new FormData();\n    formData.append('video', videoBlob, 'sign-language-recording.webm');\n    try {\n      console.log('開始上傳視訊檔案，大小:', videoBlob.size);\n\n      // 使用 /api/upload/video 端點，與路由設置一致\n      const response = await fetch('http://localhost:5000/api/upload/video', {\n        method: 'POST',\n        body: formData,\n        mode: 'cors',\n        credentials: 'omit',\n        // 不發送 cookies\n        // 不要手動設置 Content-Type，讓瀏覽器自動處理\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      console.log('收到伺服器回應', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `伺服器回應錯誤: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('伺服器回應數據', data);\n      return data;\n    } catch (error) {\n      console.error('上傳過程中發生錯誤:', error);\n      throw error;\n    }\n  };\n\n  // 取消 and 返回\n  const handleCancel = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n    setRecognitionStatus('idle');\n    navigate('/conversation');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-language-recognition-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: selectedBranch || '永豐銀行',\n      showBackButton: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recognition-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: `${isRecording ? 'recording' : ''} mirror-video`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-bar\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: handleStartRecording,\n        disabled: recognitionStatus === 'processing',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button recording-active\",\n        onClick: handleStopRecording,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"CN2f/HtOpUSIMxNtcRxnYYy1h3w=\", false, function () {\n  return [useNavigate, useLocation, useAppContext];\n});\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","useAppContext","Header","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","_location$state","navigate","location","addMessage","editMessage","setRecognitionStatus","recognitionStatus","isRecording","setIsRecording","result","setResult","videoRef","mediaRecorderRef","recordedChuncksRef","streamRef","editMessageID","state","messageID","selectedBranch","setupCamera","navigator","mediaDevices","getUserMedia","stream","video","current","srcObject","error","console","tracks","getTracks","forEach","track","stop","log","fetch","then","response","status","json","data","catch","timer","setTimeout","clearTimeout","handleStartRecording","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","size","push","start","handleStopRecording","onstop","blob","Blob","type","uploadVideoToServer","alert","message","videoBlob","formData","FormData","append","method","body","mode","credentials","headers","ok","errorData","Error","handleCancel","className","children","title","showBackButton","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\n\nconst SignLanguageRecognition = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { addMessage, editMessage, setRecognitionStatus, recognitionStatus } = useAppContext();\n    const [ isRecording, setIsRecording ] = useState(false);\n    const [ result, setResult ] = useState('');\n    const videoRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChuncksRef = useRef([]);\n    const streamRef = useRef(null);\n    const editMessageID = location.state?.messageID;\n    const { selectedBranch } = location.state || {};\n\n    // 模擬鏡頭啟動\n    useEffect(() => {\n        const setupCamera = async () => {\n            try {\n                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                    const stream = await navigator.mediaDevices.getUserMedia({video: true});\n                    streamRef.current = stream;\n                    if (videoRef.current) {\n                        videoRef.current.srcObject = stream;\n                    }\n                }\n            } catch (error) {\n                console.error('鏡頭開啟失敗:', error);\n            }\n        };\n        \n        setupCamera();\n\n        // 清理函數\n        return () => {\n            if(videoRef.current && videoRef.current.srcObject) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    // 測試與後端的連接\n    useEffect(() => {\n        console.log('開始測試與後端的連接...');\n        fetch('http://localhost:5000/api/test')\n            .then(response => {\n                console.log('收到後端回應:', response.status);\n                return response.json();\n            })\n            .then(data => console.log('後端連接測試成功:', data))\n            .catch(error => console.error('後端連接錯誤:', error));\n    }, []);\n\n    // 手語辨識模擬回應\n    useEffect(() => {\n        if(isRecording) {\n            // 模擬手語辨識結果\n            const timer = setTimeout(() => {\n                setResult('（模擬）：我要辦理存款。');\n            }, 1500);\n\n            return () => clearTimeout(timer);\n        }\n    }, [isRecording]);\n\n    // 開始錄製\n    const handleStartRecording = () => {\n        if (!streamRef.current) return;\n\n        recordedChuncksRef.current = [];\n        const mediaRecorder = new MediaRecorder(streamRef.current, {\n            mimeType: 'video/webm'\n        });\n\n        mediaRecorder.ondataavailable = (event) => {\n            if (event.data.size > 0) {\n                recordedChuncksRef.current.push(event.data);\n            }\n        };\n\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start();\n        setIsRecording(true);\n        setRecognitionStatus('recording');\n        setResult('');\n    };\n\n    // 停止錄製\n    const handleStopRecording = () => {\n        if (!mediaRecorderRef.current) return;\n\n        mediaRecorderRef.current.stop();\n        setIsRecording(false);\n        setRecognitionStatus('processing');\n\n        // 處理錄好的影像\n        mediaRecorderRef.current.onstop = async () => {\n            try {\n                // 創建 Blob 並上傳到後端\n                const blob = new Blob(recordedChuncksRef.current, { type: 'video/webm' });\n                \n                // 顯示上傳資訊\n                console.log('準備上傳視訊檔案', blob.size, '位元組');\n                \n                // 上傳影片\n                await uploadVideoToServer(blob);\n                \n                // 模擬處理延遲\n                setTimeout(() => {\n                    setRecognitionStatus('idle');\n\n                    // 編輯或新增訊息\n                    if (editMessageID) {\n                        editMessage(editMessageID, result);\n                    } else {\n                        addMessage(result, 'customer');\n                    }\n\n                    // 回 conversation page\n                    navigate('/conversation');\n                }, 1500);\n            } catch (error) {\n                console.error('上傳影像失敗：', error);\n                setRecognitionStatus('idle');\n                alert('上傳影片失敗，請重試: ' + error.message);\n            }\n        };\n    };\n\n    // 上傳到後端服務器 - 重點修正\n    const uploadVideoToServer = async (videoBlob) => {\n        const formData = new FormData();\n        formData.append('video', videoBlob, 'sign-language-recording.webm');\n        \n        try {\n            console.log('開始上傳視訊檔案，大小:', videoBlob.size);\n            \n            // 使用 /api/upload/video 端點，與路由設置一致\n            const response = await fetch('http://localhost:5000/api/upload/video', {\n                method: 'POST',\n                body: formData,\n                mode: 'cors',\n                credentials: 'omit', // 不發送 cookies\n                // 不要手動設置 Content-Type，讓瀏覽器自動處理\n                headers: {\n                    'Accept': 'application/json'\n                }\n            });\n            \n            console.log('收到伺服器回應', response.status);\n            \n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || `伺服器回應錯誤: ${response.status}`);\n            }\n            \n            const data = await response.json();\n            console.log('伺服器回應數據', data);\n            return data;\n        } catch (error) {\n            console.error('上傳過程中發生錯誤:', error);\n            throw error;\n        }\n    };\n\n    // 取消 and 返回\n    const handleCancel = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n        }\n        setIsRecording(false);\n        setRecognitionStatus('idle');\n        navigate('/conversation');\n    };\n\n    return (\n        <div className='sign-language-recognition-screen'>\n            <Header title = {selectedBranch || '永豐銀行'} showBackButton = {handleCancel} />\n\n            <div className='recognition-container'>\n                <div className='video-container'>\n                    <video\n                        ref={videoRef}\n                        autoPlay\n                        playsInline\n                        muted\n                        className = {`${isRecording ? 'recording' : ''} mirror-video`} \n                    /> \n                </div>\n            </div>\n\n            <div className='action-bar'>\n                {!isRecording ? (\n                    <button \n                        className='record-button'\n                        onClick={handleStartRecording}\n                        disabled={recognitionStatus === 'processing'}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                ) : (\n                    <button\n                        className='record-button recording-active'\n                        onClick={handleStopRecording}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}