{"ast":null,"code":"var _jsxFileName = \"/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/\\u6C38\\u8C50\\u7522\\u5B78/App/src/components/SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    addMessage,\n    editMessage,\n    setRecognitionStatus,\n    recognitionStatus\n  } = useAppContext();\n  const [isRecording, setIsRecording] = useState(false);\n  const [result, setResult] = useState('');\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const editMessageID = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.messageID;\n  const {\n    selectedBranch\n  } = location.state || {};\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        streamRef.current = stream;\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('鏡頭開啟失敗:', error);\n        alert('無法開啟鏡頭，請確認已授予攝影機權限。');\n      }\n    };\n    setupCamera();\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  useEffect(() => {\n    console.log('開始測試與後端的連接...');\n    fetch('http://localhost:8080/api/test').then(response => response.json()).then(data => console.log('後端連接測試成功:', data)).catch(error => console.error('後端連接錯誤:', error));\n  }, []);\n  const handleStartRecording = () => {\n    if (!streamRef.current) {\n      alert('鏡頭尚未準備就緒');\n      return;\n    }\n    recordedChunksRef.current = [];\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        recordedChunksRef.current.push(event.data);\n        console.log(`收到錄製片段: ${event.data.size} bytes`);\n      }\n    };\n    mediaRecorder.onstop = async () => {\n      try {\n        const blob = new Blob(recordedChunksRef.current, {\n          type: 'video/webm'\n        });\n        if (blob.size === 0) throw new Error('視訊檔案為空');\n        await uploadVideoToServer(blob);\n        setTimeout(() => {\n          setRecognitionStatus('idle');\n          if (editMessageID) {\n            editMessage(editMessageID, result);\n          } else {\n            addMessage(result, 'customer');\n          }\n          navigate('/conversation', {\n            state: {\n              selectedBranch\n            }\n          });\n        }, 1500);\n      } catch (err) {\n        console.error('處理錄製錯誤:', err);\n        alert('辨識失敗: ' + err.message);\n        setRecognitionStatus('idle');\n      }\n    };\n    mediaRecorderRef.current = mediaRecorder;\n    mediaRecorder.start(1000);\n    setIsRecording(true);\n    setRecognitionStatus('recording');\n    setResult('');\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n    setRecognitionStatus('processing');\n  };\n  const uploadVideoToServer = async videoBlob => {\n    const formData = new FormData();\n    formData.append('video', videoBlob, 'sign-language-recording.webm');\n    console.log('開始上傳視訊檔案到 /api/upload/video');\n    const response = await fetch('http://localhost:8080/api/upload/video', {\n      method: 'POST',\n      body: formData,\n      mode: 'cors'\n    });\n    if (!response.ok) {\n      const text = await response.text();\n      throw new Error(`上傳失敗: ${text}`);\n    }\n    const data = await response.json();\n    console.log('上傳成功:', data);\n    await analyzeLatestVideo();\n  };\n  const analyzeLatestVideo = async () => {\n    try {\n      console.log('呼叫 /api/analyze_latest 進行辨識...');\n      const response = await fetch('http://localhost:8080/api/analyze_latest');\n      const data = await response.json();\n      if (response.ok) {\n        if (Array.isArray(data.result)) {\n          const sentence = data.result.join(' ');\n          setResult(sentence);\n          console.log('分析結果:', sentence);\n        } else {\n          setResult(data.result); // e.g., 沒有偵測到任何手語\n          console.warn('非陣列結果:', data.result);\n        }\n      } else {\n        setResult(`錯誤：${data.error}`);\n      }\n    } catch (error) {\n      console.error('辨識 API 呼叫失敗:', error);\n      setResult('辨識過程發生錯誤');\n    }\n  };\n  const handleCancel = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n    setIsRecording(false);\n    setRecognitionStatus('idle');\n    navigate('/conversation', {\n      state: {\n        selectedBranch\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-language-recognition-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: selectedBranch || '手語／語音辨識系統',\n      showBackButton: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recognition-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: `${isRecording ? 'recording' : ''} mirror-video`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-bar\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: handleStartRecording,\n        disabled: recognitionStatus === 'processing',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button recording-active\",\n        onClick: handleStopRecording,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"ZbTxZDrcQO4iSHcKvV1zBMBk9Ks=\", false, function () {\n  return [useNavigate, useLocation, useAppContext];\n});\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useLocation","useAppContext","Header","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","_location$state","navigate","location","addMessage","editMessage","setRecognitionStatus","recognitionStatus","isRecording","setIsRecording","result","setResult","videoRef","mediaRecorderRef","recordedChunksRef","streamRef","editMessageID","state","messageID","selectedBranch","setupCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","alert","getTracks","forEach","track","stop","log","fetch","then","response","json","data","catch","handleStartRecording","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","size","push","onstop","blob","Blob","type","Error","uploadVideoToServer","setTimeout","err","message","start","handleStopRecording","videoBlob","formData","FormData","append","method","body","mode","ok","text","analyzeLatestVideo","Array","isArray","sentence","join","warn","handleCancel","className","children","title","showBackButton","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\n\nconst SignLanguageRecognition = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { addMessage, editMessage, setRecognitionStatus, recognitionStatus } = useAppContext();\n    const [isRecording, setIsRecording] = useState(false);\n    const [result, setResult] = useState('');\n    const videoRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChunksRef = useRef([]);\n    const streamRef = useRef(null);\n    const editMessageID = location.state?.messageID;\n    const { selectedBranch } = location.state || {};\n\n    useEffect(() => {\n        const setupCamera = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                streamRef.current = stream;\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            } catch (error) {\n                console.error('鏡頭開啟失敗:', error);\n                alert('無法開啟鏡頭，請確認已授予攝影機權限。');\n            }\n        };\n\n        setupCamera();\n\n        return () => {\n            if (streamRef.current) {\n                streamRef.current.getTracks().forEach(track => track.stop());\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        console.log('開始測試與後端的連接...');\n        fetch('http://localhost:8080/api/test')\n            .then(response => response.json())\n            .then(data => console.log('後端連接測試成功:', data))\n            .catch(error => console.error('後端連接錯誤:', error));\n    }, []);\n\n    const handleStartRecording = () => {\n        if (!streamRef.current) {\n            alert('鏡頭尚未準備就緒');\n            return;\n        }\n\n        recordedChunksRef.current = [];\n        const mediaRecorder = new MediaRecorder(streamRef.current, { mimeType: 'video/webm' });\n\n        mediaRecorder.ondataavailable = event => {\n            if (event.data.size > 0) {\n                recordedChunksRef.current.push(event.data);\n                console.log(`收到錄製片段: ${event.data.size} bytes`);\n            }\n        };\n\n        mediaRecorder.onstop = async () => {\n            try {\n                const blob = new Blob(recordedChunksRef.current, { type: 'video/webm' });\n                if (blob.size === 0) throw new Error('視訊檔案為空');\n\n                await uploadVideoToServer(blob);\n\n                setTimeout(() => {\n                    setRecognitionStatus('idle');\n                    if (editMessageID) {\n                        editMessage(editMessageID, result);\n                    } else {\n                        addMessage(result, 'customer');\n                    }\n                    navigate('/conversation', { state: { selectedBranch } });\n                }, 1500);\n            } catch (err) {\n                console.error('處理錄製錯誤:', err);\n                alert('辨識失敗: ' + err.message);\n                setRecognitionStatus('idle');\n            }\n        };\n\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start(1000);\n        setIsRecording(true);\n        setRecognitionStatus('recording');\n        setResult('');\n    };\n\n    const handleStopRecording = () => {\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n            mediaRecorderRef.current.stop();\n        }\n        setIsRecording(false);\n        setRecognitionStatus('processing');\n    };\n\n    const uploadVideoToServer = async (videoBlob) => {\n        const formData = new FormData();\n        formData.append('video', videoBlob, 'sign-language-recording.webm');\n\n        console.log('開始上傳視訊檔案到 /api/upload/video');\n\n        const response = await fetch('http://localhost:8080/api/upload/video', {\n            method: 'POST',\n            body: formData,\n            mode: 'cors',\n        });\n\n        if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`上傳失敗: ${text}`);\n        }\n\n        const data = await response.json();\n        console.log('上傳成功:', data);\n\n        await analyzeLatestVideo();\n    };\n\n    const analyzeLatestVideo = async () => {\n        try {\n            console.log('呼叫 /api/analyze_latest 進行辨識...');\n            const response = await fetch('http://localhost:8080/api/analyze_latest');\n            const data = await response.json();\n\n            if (response.ok) {\n                if (Array.isArray(data.result)) {\n                    const sentence = data.result.join(' ');\n                    setResult(sentence);\n                    console.log('分析結果:', sentence);\n                } else {\n                    setResult(data.result); // e.g., 沒有偵測到任何手語\n                    console.warn('非陣列結果:', data.result);\n                }\n            } else {\n                setResult(`錯誤：${data.error}`);\n            }\n        } catch (error) {\n            console.error('辨識 API 呼叫失敗:', error);\n            setResult('辨識過程發生錯誤');\n        }\n    };\n\n    const handleCancel = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n        }\n        setIsRecording(false);\n        setRecognitionStatus('idle');\n        navigate('/conversation', { state: { selectedBranch } });\n    };\n\n    return (\n        <div className='sign-language-recognition-screen'>\n            <Header title={selectedBranch || '手語／語音辨識系統'} showBackButton={handleCancel} />\n            <div className='recognition-container'>\n                <div className='video-container'>\n                    <video\n                        ref={videoRef}\n                        autoPlay\n                        playsInline\n                        muted\n                        className={`${isRecording ? 'recording' : ''} mirror-video`}\n                    />\n                </div>\n            </div>\n            <div className='action-bar'>\n                {!isRecording ? (\n                    <button\n                        className='record-button'\n                        onClick={handleStartRecording}\n                        disabled={recognitionStatus === 'processing'}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                ) : (\n                    <button\n                        className='record-button recording-active'\n                        onClick={handleStopRecording}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}