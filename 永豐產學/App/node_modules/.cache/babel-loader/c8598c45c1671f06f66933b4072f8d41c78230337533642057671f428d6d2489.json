{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('node:http');\nvar onFinished = require('on-finished');\nvar mime = require('mime-types');\nvar path = require('node:path');\nvar pathIsAbsolute = require('node:path').isAbsolute;\nvar statuses = require('statuses');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype);\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res;\n\n/**\n * Set the HTTP status code for the response.\n *\n * Expects an integer value between 100 and 999 inclusive.\n * Throws an error if the provided status code is not an integer or if it's outside the allowable range.\n *\n * @param {number} code - The HTTP status code to set.\n * @return {ServerResponse} - Returns itself for chaining methods.\n * @throws {TypeError} If `code` is not an integer.\n * @throws {RangeError} If `code` is outside the range 100 to 999.\n * @public\n */\n\nres.status = function status(code) {\n  // Check if the status code is not an integer\n  if (!Number.isInteger(code)) {\n    throw new TypeError(`Invalid status code: ${JSON.stringify(code)}. Status code must be an integer.`);\n  }\n  // Check if the status code is outside of Node's valid range\n  if (code < 100 || code > 999) {\n    throw new RangeError(`Invalid status code: ${JSON.stringify(code)}. Status code must be greater than 99 and less than 1000.`);\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5',\n *      pages: [\n *        'http://api.example.com/users?page=1',\n *        'http://api.example.com/users?page=2'\n *      ]\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function (links) {\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function (rel) {\n    // Allow multiple links if links[rel] is an array\n    if (Array.isArray(links[rel])) {\n      return links[rel].map(function (singleLink) {\n        return `<${singleLink}>; rel=\"${rel}\"`;\n      }).join(', ');\n    } else {\n      return `<${links[rel]}>; rel=\"${rel}\"`;\n    }\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (ArrayBuffer.isView(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn');\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function';\n\n  // populate Content-Length\n  var len;\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length;\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding);\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding);\n      encoding = undefined;\n      len = chunk.length;\n    }\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if (etag = etagFn(chunk, encoding)) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.status(304);\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(obj, replacer, spaces, escape);\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(obj, replacer, spaces, escape);\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n    if (body === undefined) {\n      // empty argument\n      body = '';\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode);\n  this.status(statusCode);\n  this.type('txt');\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile');\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n  if (!opts.root && !pathIsAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n\n  // wire application etag option to send\n  opts.etag = this.app.enabled('etag');\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download(path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null;\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null;\n  } else if (typeof options === 'function') {\n    done = options;\n    opts = null;\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' && (typeof options === 'function' || options === undefined)) {\n    name = null;\n    opts = filename;\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key];\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts);\n  opts.headers = headers;\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root ? resolve(path) : path;\n\n  // send file\n  return this.sendFile(fullPath, opts, done);\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.contentType()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n * When no mapping is found though `mime.contentType()`, the type is set to\n * \"application/octet-stream\".\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType = res.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1 ? mime.contentType(type) || 'application/octet-stream' : type;\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function (obj) {\n  var req = this.req;\n  var next = req.next;\n  var keys = Object.keys(obj).filter(function (v) {\n    return v !== 'default';\n  });\n  var key = keys.length > 0 ? req.accepts(keys) : false;\n  this.vary(\"Accept\");\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next);\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) {\n        return o.value;\n      })\n    }));\n  }\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n  this.set('Content-Disposition', contentDisposition(filename));\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val) : Array.isArray(val) ? [prev].concat(val) : [prev, val];\n  }\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * When the set header is \"Content-Type\", the type is expanded to include\n * the charset if not present using `mime.contentType()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set = res.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val) ? val.map(String) : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      value = mime.contentType(value);\n    }\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function (field) {\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  // Force cookie expiration by setting expires to the past\n  const opts = {\n    path: '/',\n    ...options,\n    expires: new Date(1)\n  };\n  // ensure maxAge is not passed\n  delete opts.maxAge;\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = {\n    ...options\n  };\n  var secret = this.req.secret;\n  var signed = opts.signed;\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n  var val = typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value);\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0;\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge);\n      opts.maxAge = Math.floor(maxAge / 1000);\n    }\n  }\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  return this.set('Location', encodeUrl(url));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    status = arguments[0];\n    address = arguments[1];\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function () {\n      body = statuses.message[status] + '. Redirecting to ' + address;\n    },\n    html: function () {\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to ' + u + '</p>';\n    },\n    default: function () {\n      body = '';\n    }\n  });\n\n  // Respond\n  this.status(status);\n  this.set('Content-Length', Buffer.byteLength(body));\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function (field) {\n  vary(this, field);\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify(value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces ? JSON.stringify(value, replacer, spaces) : JSON.stringify(value);\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c';\n        case 0x3e:\n          return '\\\\u003e';\n        case 0x26:\n          return '\\\\u0026';\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c;\n      }\n    });\n  }\n  return json;\n}","map":{"version":3,"names":["contentDisposition","require","createError","encodeUrl","escapeHtml","http","onFinished","mime","path","pathIsAbsolute","isAbsolute","statuses","sign","normalizeType","normalizeTypes","setCharset","cookie","send","extname","resolve","vary","res","Object","create","ServerResponse","prototype","module","exports","status","code","Number","isInteger","TypeError","JSON","stringify","RangeError","statusCode","links","link","get","set","keys","map","rel","Array","isArray","singleLink","join","body","chunk","encoding","req","type","app","ArrayBuffer","isView","json","etagFn","generateETag","len","undefined","Buffer","isBuffer","length","byteLength","from","etag","fresh","removeHeader","method","end","obj","escape","replacer","spaces","jsonp","callback","query","replace","sendStatus","message","String","sendFile","options","done","next","opts","root","pathname","encodeURI","enabled","file","sendfile","err","syscall","download","filename","name","headers","i","key","toLowerCase","fullPath","contentType","ct","indexOf","format","filter","v","accepts","value","default","types","o","attachment","append","field","val","prev","concat","header","arguments","setHeader","getHeader","clearCookie","expires","Date","maxAge","secret","signed","Error","isNaN","now","Math","floor","serialize","location","url","redirect","address","text","html","u","render","view","self","_locals","locals","str","streaming","onaborted","ondirectory","onerror","onend","onfile","onfinish","setImmediate","onstream","on","k","pipe","c","charCodeAt"],"sources":["/Users/linwanjou/Documents/GitHub/SinoPac_Sign_Language/永豐產學/App/node_modules/express/lib/response.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('node:http');\nvar onFinished = require('on-finished');\nvar mime = require('mime-types')\nvar path = require('node:path');\nvar pathIsAbsolute = require('node:path').isAbsolute;\nvar statuses = require('statuses')\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Set the HTTP status code for the response.\n *\n * Expects an integer value between 100 and 999 inclusive.\n * Throws an error if the provided status code is not an integer or if it's outside the allowable range.\n *\n * @param {number} code - The HTTP status code to set.\n * @return {ServerResponse} - Returns itself for chaining methods.\n * @throws {TypeError} If `code` is not an integer.\n * @throws {RangeError} If `code` is outside the range 100 to 999.\n * @public\n */\n\nres.status = function status(code) {\n  // Check if the status code is not an integer\n  if (!Number.isInteger(code)) {\n    throw new TypeError(`Invalid status code: ${JSON.stringify(code)}. Status code must be an integer.`);\n  }\n  // Check if the status code is outside of Node's valid range\n  if (code < 100 || code > 999) {\n    throw new RangeError(`Invalid status code: ${JSON.stringify(code)}. Status code must be greater than 99 and less than 1000.`);\n  }\n\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5',\n *      pages: [\n *        'http://api.example.com/users?page=1',\n *        'http://api.example.com/users?page=2'\n *      ]\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links) {\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel) {\n    // Allow multiple links if links[rel] is an array\n    if (Array.isArray(links[rel])) {\n      return links[rel].map(function (singleLink) {\n        return `<${singleLink}>; rel=\"${rel}\"`;\n      }).join(', ');\n    } else {\n      return `<${links[rel]}>; rel=\"${rel}\"`;\n    }\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (ArrayBuffer.isView(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.status(304);\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(obj, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(obj, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g, '\\\\u2028')\n        .replace(/\\u2029/g, '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.status(statusCode);\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !pathIsAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n\n  // wire application etag option to send\n  opts.etag = this.app.enabled('etag');\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.contentType()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n * When no mapping is found though `mime.contentType()`, the type is set to\n * \"application/octet-stream\".\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? (mime.contentType(type) || 'application/octet-stream')\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next)\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val]\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * When the set header is \"Content-Type\", the type is expanded to include\n * the charset if not present using `mime.contentType()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      value = mime.contentType(value)\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  // Force cookie expiration by setting expires to the past\n  const opts = { path: '/', ...options, expires: new Date(1)};\n  // ensure maxAge is not passed\n  delete opts.maxAge\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = { ...options };\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  return this.set('Location', encodeUrl(url));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    status = arguments[0]\n    address = arguments[1]\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to ' + u + '</p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.status(status);\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}