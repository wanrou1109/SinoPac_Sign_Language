{"ast":null,"code":"var _jsxFileName = \"/Users/johnsonleong/Desktop/DS/DS/Grade project/SinoPac_Sign_Language/\\u6C38\\u8C50\\u7522\\u5B78/App/src/components/SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as handsModule from \"@mediapipe/hands\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    addMessage,\n    editMessage,\n    setRecognitionStatus,\n    recognitionStatus,\n    setConversations\n  } = useAppContext();\n  const [isRecording, setIsRecording] = useState(false);\n  const [result, setResult] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const recognitionIntervalRef = useRef(null);\n  const lastRecognizedTextRef = useRef('');\n  const resultBoxRef = useRef(null);\n  const keypointsBuffer = useRef([]);\n  const editMessageID = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.messageID;\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        streamRef.current = stream;\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n        // MediaPipe Hands integration\n        const hands = new handsModule.Hands({\n          locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`\n        });\n        hands.setOptions({\n          maxNumHands: 2,\n          modelComplexity: 1,\n          minDetectionConfidence: 0.7,\n          minTrackingConfidence: 0.5\n        });\n        hands.onResults(results => {\n          const canvasCtx = canvasRef.current.getContext('2d');\n          canvasCtx.clearRect(0, 0, 640, 480);\n          // 水平翻轉影像\n          canvasCtx.save();\n          canvasCtx.translate(640, 0); // 水平翻轉畫面\n          canvasCtx.scale(-1, 1);\n          // Draw the video frame onto the canvas first\n          if (videoRef.current) {\n            canvasCtx.drawImage(videoRef.current, 0, 0, 640, 480);\n          }\n          canvasCtx.restore();\n\n          // 畫手部輔助線與標籤（在 restore 之後，避免被鏡像影響）\n          if (results.multiHandLandmarks) {\n            for (let i = 0; i < results.multiHandLandmarks.length; i++) {\n              var _results$multiHandedn, _results$multiHandedn2, _results$multiHandedn3, _results$multiHandedn4;\n              const landmarks = results.multiHandLandmarks[i];\n              const isLeft = ((_results$multiHandedn = results.multiHandedness) === null || _results$multiHandedn === void 0 ? void 0 : (_results$multiHandedn2 = _results$multiHandedn[i]) === null || _results$multiHandedn2 === void 0 ? void 0 : _results$multiHandedn2.label) === 'Left';\n              const connectorColor = isLeft ? '#00BFFF' : '#32CD32'; // Left: DeepSkyBlue, Right: LimeGreen\n              const landmarkColor = isLeft ? '#1E90FF' : '#228B22'; // Left: DodgerBlue, Right: ForestGreen\n              drawConnectors(canvasCtx, landmarks, handsModule.HAND_CONNECTIONS, {\n                color: connectorColor,\n                lineWidth: 2\n              });\n              drawLandmarks(canvasCtx, landmarks, {\n                color: landmarkColor,\n                lineWidth: 1\n              });\n\n              // 顯示左右手標籤（直接使用 MediaPipe 辨識結果）\n              let handedness = ((_results$multiHandedn3 = results.multiHandedness) === null || _results$multiHandedn3 === void 0 ? void 0 : (_results$multiHandedn4 = _results$multiHandedn3[i]) === null || _results$multiHandedn4 === void 0 ? void 0 : _results$multiHandedn4.label) || '';\n              if (landmarks[0]) {\n                canvasCtx.font = \"16px Arial\";\n                canvasCtx.fillStyle = \"blue\";\n                canvasCtx.fillText(handedness, landmarks[0].x * 640, landmarks[0].y * 480 - 10);\n              }\n            }\n          }\n          if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n            const keypoints = results.multiHandLandmarks.map((landmarks, i) => {\n              var _results$multiHandedn5, _results$multiHandedn6;\n              const handedness = ((_results$multiHandedn5 = results.multiHandedness) === null || _results$multiHandedn5 === void 0 ? void 0 : (_results$multiHandedn6 = _results$multiHandedn5[i]) === null || _results$multiHandedn6 === void 0 ? void 0 : _results$multiHandedn6.label) === 'Left' ? [1, 0] : [0, 1];\n              return landmarks.flatMap(pt => {\n                var _pt$visibility;\n                return [pt.x, pt.y, pt.z, (_pt$visibility = pt.visibility) !== null && _pt$visibility !== void 0 ? _pt$visibility : 1.0, ...handedness];\n              });\n            });\n            while (keypoints.length < 2) {\n              keypoints.push(Array(21 * 6).fill(0));\n            }\n            const flat = keypoints[0].concat(keypoints[1]); // (252, )\n            keypointsBuffer.current.push(flat);\n            if (keypointsBuffer.current.length > 30) {\n              keypointsBuffer.current.shift();\n            }\n            window.keypointsArray = [...keypointsBuffer.current];\n          } else {\n            keypointsBuffer.current = [];\n            window.keypointsArray = [];\n          }\n        });\n        const camera = new Camera(videoRef.current, {\n          onFrame: async () => {\n            await hands.send({\n              image: videoRef.current\n            });\n          },\n          width: 640,\n          height: 480\n        });\n        camera.start();\n      } catch (error) {\n        console.error('鏡頭開啟失敗:', error);\n        alert('無法開啟鏡頭，請確認已授予攝影機權限。');\n      }\n    };\n    setupCamera();\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (recognitionIntervalRef.current) {\n        clearInterval(recognitionIntervalRef.current);\n        recognitionIntervalRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    console.log('開始測試與後端的連接...');\n    fetch('/api/test').then(response => {\n      if (!response.ok) {\n        throw new Error(`後端錯誤：${response.status}`);\n      }\n      return response.json();\n    }).then(data => console.log('後端連接測試成功:', data)).catch(error => console.error('後端連接錯誤:', error));\n  }, []);\n\n  // 即時辨識\n  const startPeriodicRecognition = () => {\n    recognitionIntervalRef.current = setInterval(() => {\n      if (!isProcessing) {\n        captureAndRecognize();\n      }\n    }, 1000);\n  };\n  const captureAndRecognize = async () => {\n    if (!videoRef.current || !streamRef.current) return;\n    try {\n      setIsProcessing(true);\n\n      // canvas -> 捕捉當前影片幀\n      const canvas = document.createElement('canvas');\n      const videoElement = videoRef.current;\n      canvas.width = videoElement.videoWidth;\n      canvas.height = videoElement.videoHeight;\n\n      // 影片幀繪製到 canvas\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n      // 傳送到後端，延遲 0 毫秒\n      setTimeout(() => {\n        sendFrameToRecognition();\n      }, 0);\n    } catch (err) {\n      console.error('處理影片幀時發生錯誤：', err);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const sendFrameToRecognition = async () => {\n    try {\n      const keypointsArray = window.keypointsArray;\n      if (!keypointsArray || keypointsArray.length !== 30) {\n        throw new Error('keypointsArray 資料不足，需 30 幀');\n      }\n      const totalLength = keypointsArray.reduce((sum, row) => sum + row.length, 0);\n      if (totalLength !== 30 * 126) {\n        throw new Error(`格式錯誤，應為 (30, 126)，目前為 (30, ${totalLength / 30})`);\n      }\n      console.log('發送節點資料進行辨識...');\n      const response = await fetch('/api/sign-language-recognition/frame', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          keypoints: keypointsArray\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`伺服器錯誤： ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('辨識結果：', data);\n      if (data.success && data.text) {\n        updateRecognizedText(data.text);\n      }\n    } catch (err) {\n      console.error('發送節點到後端時發生錯誤：', err);\n    }\n  };\n  const updateRecognizedText = newText => {\n    if (!newText || newText.trim() === '') return;\n    setResult(prevText => {\n      const lastText = lastRecognizedTextRef.current;\n      if (newText === \"請打下一個字\") {\n        return prevText + '\\n請打下一個字';\n      }\n      if (newText === lastText) {\n        return prevText;\n      }\n      lastRecognizedTextRef.current = newText;\n      return prevText + newText;\n    });\n  };\n\n  // 原錄製功能保留、新增即時辨識\n  const handleStartRecording = () => {\n    if (!streamRef.current) {\n      alert('鏡頭尚未準備就緒');\n      return;\n    }\n    setResult('');\n    lastRecognizedTextRef.current = '';\n    recordedChunksRef.current = [];\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        recordedChunksRef.current.push(event.data);\n        console.log(`收到錄製片段: ${event.data.size} bytes`);\n      }\n    };\n    mediaRecorder.onstop = async () => {\n      if (recognitionIntervalRef.current) {\n        clearInterval(recognitionIntervalRef.current);\n        recognitionIntervalRef.current = null;\n      }\n      try {\n        const blob = new Blob(recordedChunksRef.current, {\n          type: 'video/webm'\n        });\n        if (blob.size === 0) throw new Error('視訊檔案為空');\n\n        // await uploadVideoToServer(blob); // 上傳完整影片\n\n        setTimeout(() => {\n          setRecognitionStatus('idle');\n          if (editMessageID) {\n            editMessage(editMessageID, result);\n          } else {\n            addMessage(result, 'customer');\n          }\n          navigate('/conversation');\n        }, 1000);\n      } catch (err) {\n        console.error('處理錄製錯誤:', err);\n        alert('辨識失敗: ' + err.message);\n        setRecognitionStatus('idle');\n      }\n    };\n    mediaRecorderRef.current = mediaRecorder;\n    mediaRecorder.start(1000);\n    setIsRecording(true);\n    setRecognitionStatus('recording');\n    startPeriodicRecognition();\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    if (recognitionIntervalRef.current) {\n      clearInterval(recognitionIntervalRef.current);\n      recognitionIntervalRef.current = null;\n    }\n    setIsRecording(false);\n    setRecognitionStatus('processing');\n  };\n\n  // 整段影片上傳後端功能\n  /**\n  const uploadVideoToServer = async (videoBlob) => {\n      const formData = new FormData();\n      formData.append('video', videoBlob, 'sign-language-recording.webm');\n       console.log('開始上傳視訊檔案到 /api/upload/video');\n       const response = await fetch('http://localhost:5000/api/upload/video', {\n          method: 'POST',\n          body: formData,\n          mode: 'cors',\n      });\n       if (!response.ok) {\n          const text = await response.text();\n          throw new Error(`上傳失敗: ${text}`);\n      }\n       const data = await response.json();\n      console.log('上傳成功:', data);\n       await analyzeLatestVideo();\n      return data;\n  };\n  */\n\n  const analyzeLatestVideo = async () => {\n    try {\n      setTimeout(async () => {\n        try {\n          console.log('呼叫 /api/analyze_latest 進行辨識...');\n          const response = await fetch('/api/analyze_latest');\n          if (!response.ok) {\n            throw new Error(`網路回應不正常: ${response.status}`);\n          }\n          const data = await response.json();\n          console.log('手語辨識結果：', data);\n          if (data.result && data.result.length > 0) {\n            var _location$state2;\n            const recognizedText = data.result.join(' ');\n            // setResult(recognizedText);\n            const messageID = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.messageID;\n            if (messageID) {\n              editMessage(messageID, recognizedText);\n            } else {\n              const newMessage = {\n                id: Date.now.toString(),\n                text: recognizedText,\n                sender: 'customer',\n                timestamp: new Date().toString()\n              };\n              setConversations(prev => [...prev, newMessage]);\n            }\n            navigate('/conversation');\n          } else {\n            setResult('無法辨識手語內容');\n          }\n        } catch (error) {\n          console.error('辨識結果時發生錯誤：', error);\n          setResult('辨識過程發生錯誤，請重試');\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('辨識 API 呼叫失敗:', error);\n      setResult('辨識過程發生錯誤，請重試');\n    }\n  };\n  const handleBack = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n    if (recognitionIntervalRef.current) {\n      clearInterval(recognitionIntervalRef.current);\n      recognitionIntervalRef.current = null;\n    }\n    setIsRecording(false);\n    setRecognitionStatus('idle');\n    navigate('/conversation');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-language-recognition-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showBackButton: true,\n      onBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recognition-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"overlay-canvas\",\n          width: 640,\n          height: 480\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-indicator\",\n          children: \"\\u8FA8\\u8B58\\u4E2D...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `recognition-result ${isRecording ? 'visible' : 'hidden'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5373\\u6642\\u8FA8\\u8B58\\u7D50\\u679C\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: resultBoxRef,\n          className: `result-text ${result ? 'has-content' : ''}`,\n          children: result ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recognized-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prompt\",\n              children: \"\\u8ACB\\u6253\\u4E0B\\u4E00\\u500B\\u5B57\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u76EE\\u524D\\u5DF2\\u8F38\\u5165\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 38\n              }, this), \" \", result.replace(/請打下一個字/g, '').trim()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 29\n          }, this) : '等待手語辨識...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"live-indicator\",\n          children: \"\\u5373\\u6642\\u66F4\\u65B0\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-bar\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button\",\n        onClick: handleStartRecording,\n        disabled: recognitionStatus === 'processing',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button recording-active\",\n        onClick: handleStopRecording,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"CuvadmqeFvakYoPZ22pRXa+xrAk=\", false, function () {\n  return [useNavigate, useLocation, useAppContext];\n});\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useState","useEffect","useRef","handsModule","drawConnectors","drawLandmarks","Camera","useNavigate","useLocation","useAppContext","Header","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","_location$state","navigate","location","addMessage","editMessage","setRecognitionStatus","recognitionStatus","setConversations","isRecording","setIsRecording","result","setResult","isProcessing","setIsProcessing","videoRef","canvasRef","mediaRecorderRef","recordedChunksRef","streamRef","recognitionIntervalRef","lastRecognizedTextRef","resultBoxRef","keypointsBuffer","editMessageID","state","messageID","setupCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","hands","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","results","canvasCtx","getContext","clearRect","save","translate","scale","drawImage","restore","multiHandLandmarks","i","length","_results$multiHandedn","_results$multiHandedn2","_results$multiHandedn3","_results$multiHandedn4","landmarks","isLeft","multiHandedness","label","connectorColor","landmarkColor","HAND_CONNECTIONS","color","lineWidth","handedness","font","fillStyle","fillText","x","y","keypoints","map","_results$multiHandedn5","_results$multiHandedn6","flatMap","pt","_pt$visibility","z","visibility","push","Array","fill","flat","concat","shift","window","keypointsArray","camera","onFrame","send","image","width","height","start","error","console","alert","getTracks","forEach","track","stop","clearInterval","log","fetch","then","response","ok","Error","status","json","data","catch","startPeriodicRecognition","setInterval","captureAndRecognize","canvas","document","createElement","videoElement","videoWidth","videoHeight","ctx","setTimeout","sendFrameToRecognition","err","totalLength","reduce","sum","row","method","headers","body","JSON","stringify","success","text","updateRecognizedText","newText","trim","prevText","lastText","handleStartRecording","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","size","onstop","blob","Blob","type","message","handleStopRecording","analyzeLatestVideo","_location$state2","recognizedText","join","newMessage","id","Date","now","toString","sender","timestamp","prev","handleBack","className","children","showBackButton","onBack","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","style","display","replace","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/johnsonleong/Desktop/DS/DS/Grade project/SinoPac_Sign_Language/永豐產學/App/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as handsModule from \"@mediapipe/hands\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../contexts/AppContext.js';\nimport Header from './Header.js';\nimport '../styles/SignLanguageRecognition.css';\n\nconst SignLanguageRecognition = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { addMessage, editMessage, setRecognitionStatus, recognitionStatus, setConversations } = useAppContext();\n    const [ isRecording, setIsRecording ] = useState(false);\n    const [ result, setResult ] = useState('');\n    const [ isProcessing, setIsProcessing ] = useState(false);\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChunksRef = useRef([]);\n    const streamRef = useRef(null);\n    const recognitionIntervalRef = useRef(null);\n    const lastRecognizedTextRef = useRef('');\n    const resultBoxRef = useRef(null);\n    const keypointsBuffer = useRef([]);\n    const editMessageID = location.state?.messageID;\n\n    useEffect(() => {\n        const setupCamera = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                streamRef.current = stream;\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n                // MediaPipe Hands integration\n                const hands = new handsModule.Hands({\n                    locateFile: (file) =>\n                        `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`,\n                });\n\n                hands.setOptions({\n                    maxNumHands: 2,\n                    modelComplexity: 1,\n                    minDetectionConfidence: 0.7,\n                    minTrackingConfidence: 0.5,\n                });\n\n                hands.onResults((results) => {\n                    const canvasCtx = canvasRef.current.getContext('2d');\n                    canvasCtx.clearRect(0, 0, 640, 480);\n                    // 水平翻轉影像\n                    canvasCtx.save();\n                    canvasCtx.translate(640, 0); // 水平翻轉畫面\n                    canvasCtx.scale(-1, 1);\n                    // Draw the video frame onto the canvas first\n                    if (videoRef.current) {\n                        canvasCtx.drawImage(videoRef.current, 0, 0, 640, 480);\n                    }\n                    canvasCtx.restore();\n\n                    // 畫手部輔助線與標籤（在 restore 之後，避免被鏡像影響）\n                    if (results.multiHandLandmarks) {\n                        for (let i = 0; i < results.multiHandLandmarks.length; i++) {\n                            const landmarks = results.multiHandLandmarks[i];\n                            const isLeft = results.multiHandedness?.[i]?.label === 'Left';\n                            const connectorColor = isLeft ? '#00BFFF' : '#32CD32'; // Left: DeepSkyBlue, Right: LimeGreen\n                            const landmarkColor = isLeft ? '#1E90FF' : '#228B22';  // Left: DodgerBlue, Right: ForestGreen\n                            drawConnectors(canvasCtx, landmarks, handsModule.HAND_CONNECTIONS, { color: connectorColor, lineWidth: 2 });\n                            drawLandmarks(canvasCtx, landmarks, { color: landmarkColor, lineWidth: 1 });\n\n                            // 顯示左右手標籤（直接使用 MediaPipe 辨識結果）\n                            let handedness = results.multiHandedness?.[i]?.label || '';\n                            if (landmarks[0]) {\n                                canvasCtx.font = \"16px Arial\";\n                                canvasCtx.fillStyle = \"blue\";\n                                canvasCtx.fillText(handedness, landmarks[0].x * 640, landmarks[0].y * 480 - 10);\n                            }\n                        }\n                    }\n\n                    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n                        const keypoints = results.multiHandLandmarks.map((landmarks, i) => {\n                            const handedness = results.multiHandedness?.[i]?.label === 'Left' ? [1, 0] : [0, 1];\n                            return landmarks.flatMap(pt => [pt.x, pt.y, pt.z, pt.visibility ?? 1.0, ...handedness]);\n                        });\n\n                        while (keypoints.length < 2) {\n                            keypoints.push(Array(21 * 6).fill(0));\n                        }\n\n                        const flat = keypoints[0].concat(keypoints[1]); // (252, )\n                        keypointsBuffer.current.push(flat);\n\n                        if (keypointsBuffer.current.length > 30) {\n                            keypointsBuffer.current.shift();\n                        }\n\n                        window.keypointsArray = [...keypointsBuffer.current];\n                    } else {\n                        keypointsBuffer.current = [];\n                        window.keypointsArray = [];\n                    }\n                });\n\n                const camera = new Camera(videoRef.current, {\n                    onFrame: async () => {\n                        await hands.send({ image: videoRef.current });\n                    },\n                    width: 640,\n                    height: 480,\n                });\n                camera.start();\n            } catch (error) {\n                console.error('鏡頭開啟失敗:', error);\n                alert('無法開啟鏡頭，請確認已授予攝影機權限。');\n            }\n        };\n\n        setupCamera();\n\n        return () => {\n            if (streamRef.current) {\n                streamRef.current.getTracks().forEach(track => track.stop());\n            }\n\n            if (recognitionIntervalRef.current) {\n                clearInterval(recognitionIntervalRef.current);\n                recognitionIntervalRef.current = null;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        console.log('開始測試與後端的連接...');\n        fetch('/api/test')\n        .then(response => {\n            if (!response.ok) {\n            throw new Error(`後端錯誤：${response.status}`);\n            }\n            return response.json();\n        })\n        .then(data => console.log('後端連接測試成功:', data))\n        .catch(error => console.error('後端連接錯誤:', error));\n    }, []);\n\n    // 即時辨識\n    const startPeriodicRecognition = () => {\n        recognitionIntervalRef.current = setInterval(() => {\n            if (!isProcessing) {\n                captureAndRecognize();\n            }\n        }, 1000);\n    };\n\n    const captureAndRecognize = async () => {\n        if (!videoRef.current || !streamRef.current) return;\n\n        try {\n            setIsProcessing(true);\n\n            // canvas -> 捕捉當前影片幀\n            const canvas = document.createElement('canvas');\n            const videoElement = videoRef.current;\n\n            canvas.width = videoElement.videoWidth;\n            canvas.height = videoElement.videoHeight;\n\n            // 影片幀繪製到 canvas\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n            // 傳送到後端，延遲 0 毫秒\n            setTimeout(() => {\n                sendFrameToRecognition();\n            }, 0);\n        } catch (err) {\n            console.error('處理影片幀時發生錯誤：', err);\n        } finally {\n            setIsProcessing(false);\n        }\n    };\n\n    const sendFrameToRecognition = async () => {\n        try {\n            const keypointsArray = window.keypointsArray;\n            if (!keypointsArray || keypointsArray.length !== 30) {\n                throw new Error('keypointsArray 資料不足，需 30 幀');\n            }\n\n            const totalLength = keypointsArray.reduce((sum, row) => sum + row.length, 0);\n            if (totalLength !== 30 * 126) {\n                throw new Error(`格式錯誤，應為 (30, 126)，目前為 (30, ${totalLength / 30})`);\n            }\n\n            console.log('發送節點資料進行辨識...');\n\n            const response = await fetch('/api/sign-language-recognition/frame', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ keypoints: keypointsArray })\n            });\n\n            if (!response.ok) {\n                throw new Error(`伺服器錯誤： ${response.status}`);\n            }\n\n            const data = await response.json();\n            console.log('辨識結果：', data);\n\n            if (data.success && data.text) {\n                updateRecognizedText(data.text);\n            }\n        } catch (err) {\n            console.error('發送節點到後端時發生錯誤：', err);\n        }\n    };\n\n    const updateRecognizedText = (newText) => {\n        if (!newText || newText.trim() === '') return;\n\n        setResult(prevText => {\n            const lastText = lastRecognizedTextRef.current;\n\n            if (newText === \"請打下一個字\") {\n                return prevText + '\\n請打下一個字';\n            }\n\n            if (newText === lastText) {\n                return prevText;\n            }\n\n            lastRecognizedTextRef.current = newText;\n            return prevText + newText;\n        });\n    };\n\n    // 原錄製功能保留、新增即時辨識\n    const handleStartRecording = () => {\n        if (!streamRef.current) {\n            alert('鏡頭尚未準備就緒');\n            return;\n        }\n\n        setResult('');\n        lastRecognizedTextRef.current = '';\n        recordedChunksRef.current = [];\n\n        const mediaRecorder = new MediaRecorder(streamRef.current, { mimeType: 'video/webm' });\n\n        mediaRecorder.ondataavailable = event => {\n            if (event.data.size > 0) {\n                recordedChunksRef.current.push(event.data);\n                console.log(`收到錄製片段: ${event.data.size} bytes`);\n            }\n        };\n\n        mediaRecorder.onstop = async () => {\n            if (recognitionIntervalRef.current) {\n                clearInterval(recognitionIntervalRef.current);\n                recognitionIntervalRef.current = null;\n            }\n            try {\n                const blob = new Blob(recordedChunksRef.current, { type: 'video/webm' });\n                if (blob.size === 0) throw new Error('視訊檔案為空');\n\n                // await uploadVideoToServer(blob); // 上傳完整影片\n\n                setTimeout(() => {\n                    setRecognitionStatus('idle');\n                    if (editMessageID) {\n                        editMessage(editMessageID, result);\n                    } else {\n                        addMessage(result, 'customer');\n                    }\n                    navigate('/conversation');\n                }, 1000);\n            } catch (err) {\n                console.error('處理錄製錯誤:', err);\n                alert('辨識失敗: ' + err.message);\n                setRecognitionStatus('idle');\n            }\n        };\n\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start(1000);\n        setIsRecording(true);\n        setRecognitionStatus('recording');\n        startPeriodicRecognition();\n    };\n\n    const handleStopRecording = () => {\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n            mediaRecorderRef.current.stop();\n        }\n\n        if (recognitionIntervalRef.current) {\n            clearInterval(recognitionIntervalRef.current);\n            recognitionIntervalRef.current = null;\n        }\n\n        setIsRecording(false);\n        setRecognitionStatus('processing');\n    };\n\n    // 整段影片上傳後端功能\n    /**\n    const uploadVideoToServer = async (videoBlob) => {\n        const formData = new FormData();\n        formData.append('video', videoBlob, 'sign-language-recording.webm');\n\n        console.log('開始上傳視訊檔案到 /api/upload/video');\n\n        const response = await fetch('http://localhost:5000/api/upload/video', {\n            method: 'POST',\n            body: formData,\n            mode: 'cors',\n        });\n\n        if (!response.ok) {\n            const text = await response.text();\n            throw new Error(`上傳失敗: ${text}`);\n        }\n\n        const data = await response.json();\n        console.log('上傳成功:', data);\n\n        await analyzeLatestVideo();\n        return data;\n    };\n    */\n    \n    const analyzeLatestVideo = async () => {\n        try {\n            setTimeout(async () => {\n                try {\n                    console.log('呼叫 /api/analyze_latest 進行辨識...');\n                    const response = await fetch('/api/analyze_latest');\n\n                    if (!response.ok) {\n                        throw new Error(`網路回應不正常: ${response.status}`);\n                    }\n                    \n                    const data = await response.json();\n                    console.log('手語辨識結果：', data);\n\n                    if (data.result && data.result.length > 0) {\n                        const recognizedText = data.result.join(' ');\n                        // setResult(recognizedText);\n                        const messageID = location.state?.messageID;\n                        \n                        if (messageID) {\n                            editMessage(messageID, recognizedText);\n                        } else {\n                            const newMessage = {\n                                id: Date.now.toString(),\n                                text: recognizedText,\n                                sender: 'customer',\n                                timestamp: new Date().toString() \n                            };\n                            setConversations(prev => [...prev, newMessage]);\n                        }\n\n                        navigate('/conversation');\n                    } else {\n                        setResult('無法辨識手語內容');\n                    }\n                } catch (error) {\n                    console.error('辨識結果時發生錯誤：', error);\n                    setResult('辨識過程發生錯誤，請重試');\n                }\n            }, 1500);        \n        } catch (error) {\n            console.error('辨識 API 呼叫失敗:', error);\n            setResult('辨識過程發生錯誤，請重試');\n        }\n    };\n\n\n    const handleBack = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n        }\n\n        if (recognitionIntervalRef.current) {\n            clearInterval(recognitionIntervalRef.current);\n            recognitionIntervalRef.current = null;\n        }\n        \n        setIsRecording(false);\n        setRecognitionStatus('idle');\n        navigate('/conversation');\n    };\n\n    return (\n        <div className='sign-language-recognition-screen'>\n            <Header showBackButton={true} onBack={handleBack}/>\n            <div className='recognition-container'>\n                <div className='video-container'>\n                    <video\n                        ref={videoRef}\n                        autoPlay\n                        playsInline\n                        muted\n                        style={{ display: 'none' }}\n                    />\n                    <canvas\n                        ref={canvasRef}\n                        className=\"overlay-canvas\"\n                        width={640}\n                        height={480}\n                    />\n                    {isProcessing && (\n                        <div className='processing-indicator'>\n                            辨識中...\n                        </div>\n                    )}\n                </div>\n\n                <div className={`recognition-result ${isRecording ? 'visible' : 'hidden'}`}>\n                    <h3>即時辨識結果：</h3>\n                    <div\n                        ref={resultBoxRef}\n                        className={`result-text ${result ? 'has-content' : ''}`}\n                    >\n                        {result ? (\n                            <div className=\"recognized-summary\">\n                                <div className=\"prompt\">請打下一個字</div>\n                                <div><strong>目前已輸入：</strong> {result.replace(/請打下一個字/g, '').trim()}</div>\n                            </div>\n                        ) : '等待手語辨識...'}\n                    </div>\n                    {isRecording && <div className=\"live-indicator\">即時更新中</div>}\n                </div>\n            </div>\n            \n            <div className='action-bar'>\n                {!isRecording ? (\n                    <button\n                        className='record-button'\n                        onClick={handleStartRecording}\n                        disabled={recognitionStatus === 'processing'}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                ) : (\n                    <button\n                        className='record-button recording-active'\n                        onClick={handleStopRecording}\n                    >\n                        <div className='button-inner'></div>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}